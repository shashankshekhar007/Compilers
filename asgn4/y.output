Terminals unused in grammar

   Single_line_comment
   Multi_line_comment
   Key_case
   Key_const
   Key_default
   Key_fallthrough
   Key_interface
   Key_range
   Key_select
   Key_switch
   Key_class
   Key_private
   Key_protected
   Key_public
   Key_static
   Key_try
   Key_catch
   Key_finally
   M_question
   M_doublequotes
   M_singlequotes
   M_underscore


State 6 conflicts: 1 shift/reduce
State 12 conflicts: 3 shift/reduce
State 116 conflicts: 5 shift/reduce
State 128 conflicts: 1 shift/reduce
State 133 conflicts: 3 shift/reduce
State 134 conflicts: 6 shift/reduce
State 136 conflicts: 1 shift/reduce
State 188 conflicts: 12 shift/reduce
State 199 conflicts: 1 shift/reduce
State 228 conflicts: 3 shift/reduce
State 229 conflicts: 6 shift/reduce
State 230 conflicts: 6 shift/reduce
State 231 conflicts: 6 shift/reduce
State 232 conflicts: 1 shift/reduce
State 233 conflicts: 1 shift/reduce
State 265 conflicts: 2 shift/reduce
State 289 conflicts: 17 shift/reduce
State 300 conflicts: 17 shift/reduce
State 319 conflicts: 2 shift/reduce
State 322 conflicts: 2 shift/reduce


Grammar

    0 $accept: SourceFile $end

    1 SourceFile: PackageClause M_semicolon ImportDeclList TopLevelDeclList

    2 Block: M_lcurly OPENB StatementList CLOSEB M_rcurly

    3 OPENB: %empty

    4 CLOSEB: %empty

    5 BrkBlk: %empty

    6 BrkBlkEnd: %empty

    7 StatementList: StatementList Statement M_semicolon
    8              | Statement M_semicolon

    9 Statement: Declaration
   10          | LabeledStmt
   11          | SimpleStmt
   12          | ReturnStmt
   13          | BreakStmt
   14          | ContinueStmt
   15          | Block
   16          | IfStmt
   17          | ForStmt

   18 SimpleStmt: EmptyStmt
   19           | ExpressionStmt
   20           | IncDecStmt
   21           | Assignment
   22           | ShortVarDecl

   23 EmptyStmt: %empty

   24 ExpressionStmt: Expression

   25 IncDecStmt: Expression Op_unary_add
   26           | Expression Op_unary_sub
   27           | Expression Op_add Op_assign Expression
   28           | Expression Op_sub Op_assign Expression

   29 Assignment: ExpressionList ASN_OP ExpressionList

   30 ASN_OP: Op_add Op_assign
   31       | Op_sub Op_assign
   32       | Op_unary_or Op_assign
   33       | Op_pow Op_assign
   34       | MUL_OP Op_assign
   35       | Op_assign

   36 ShortVarDecl: ExpressionList Op_assign ExpressionList

   37 VarDecl: Key_var VarSpec

   38 VarSpec: IdentifierList Type
   39        | IdentifierList Type ASN_OP ExpressionList
   40        | IdentifierList ASN_OP ExpressionList

   41 Declaration: TypeDecl
   42            | VarDecl

   43 FunctionDecl: Key_func Identifier OPENB Signature CLOSEB
   44             | Key_func Identifier OPENB Signature Block CLOSEB

   45 Signature: Parameters
   46          | Parameters Result

   47 Result: M_lparan TypeList M_rparan
   48       | Type

   49 Parameters: M_lparan M_rparan
   50           | M_lparan ParameterList M_rparan
   51           | M_lparan ParameterList M_comma M_rparan

   52 ParameterList: ParameterDecl
   53              | ParameterList M_comma ParameterDecl

   54 ParameterDecl: IdentifierList Type

   55 TypeList: TypeList M_comma Type
   56         | Type

   57 IdentifierList: Identifier
   58               | IdentifierList M_comma Identifier

   59 MethodDecl: Key_func Receiver Identifier Signature

   60 Receiver: Parameters

   61 TopLevelDeclList: TopLevelDeclList TopLevelDecl M_semicolon
   62                 | TopLevelDecl M_semicolon

   63 CompositeLit: LiteralType LiteralValue

   64 LiteralType: StructType
   65            | ArrayType
   66            | PointerType
   67            | M_lsqbracket DOTS M_rsqbracket Operand
   68            | SliceType
   69            | MapType

   70 VarType: T_int16
   71        | T_int8
   72        | T_int32
   73        | T_int64
   74        | T_int
   75        | T_bool
   76        | T_string
   77        | T_uint
   78        | T_uint16
   79        | T_uint32
   80        | T_uint64
   81        | T_uintptr
   82        | T_float32
   83        | T_float64
   84        | T_complex64
   85        | T_complex128

   86 Type: LiteralType
   87     | OperandName
   88     | VarType

   89 Operand: Literal
   90        | OperandName
   91        | M_lparan Expression M_rparan

   92 OperandName: Identifier

   93 LiteralValue: M_lcurly M_rcurly
   94             | M_semicolon M_rcurly
   95             | M_lcurly ElementList M_rcurly
   96             | M_semicolon ElementList M_rcurly
   97             | M_lcurly ElementList M_comma M_rcurly
   98             | M_semicolon ElementList M_comma M_rcurly

   99 SliceType: M_lsqbracket M_rsqbracket Type

  100 ElementList: KeyedElement
  101            | ElementList M_comma KeyedElement

  102 KeyedElement: Element
  103             | Key M_colon Element

  104 Key: Expression
  105    | LiteralValue

  106 Element: Expression
  107        | LiteralValue

  108 TopLevelDecl: Declaration
  109             | FunctionDecl
  110             | MethodDecl

  111 LabeledStmt: Identifier M_colon Statement

  112 ReturnStmt: Key_return
  113           | Key_return ExpressionList

  114 BreakStmt: Key_break
  115          | Key_break Identifier

  116 ContinueStmt: Key_continue
  117             | Key_continue Identifier

  118 IfStmt: Key_if OPENB Expression Block CLOSEB
  119       | Key_if OPENB SimpleStmt M_semicolon Expression Block CLOSEB
  120       | Key_if OPENB Expression Block Key_else Block CLOSEB
  121       | Key_if OPENB Expression Block Key_else IfStmt CLOSEB
  122       | Key_if OPENB SimpleStmt M_semicolon Expression Block Key_else IfStmt CLOSEB
  123       | Key_if OPENB SimpleStmt M_semicolon Expression Block Key_else Block CLOSEB

  124 EmptyExpr: %empty

  125 Empty: %empty

  126 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB
  127        | Key_for OPENB Expression BrkBlk Block BrkBlkEnd CLOSEB
  128        | Key_for BrkBlk Block BrkBlkEnd
  129        | Key_for OPENB SimpleStmt M_semicolon BrkBlk EmptyExpr M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB
  130        | Key_for OPENB EmptyStmt Empty BrkBlk Expression Empty EmptyStmt Block BrkBlkEnd CLOSEB

  131 Expression: Expression1

  132 Expression1: Expression1 Op_relational_or Expression2
  133            | Expression2

  134 Expression2: Expression2 Op_relational_and Expression3
  135            | Expression3

  136 Expression3: Expression3 REL_OP Expression4
  137            | Expression4

  138 Expression4: Expression4 Op_unary_or Expression5
  139            | Expression4 Op_add Expression5
  140            | Expression4 Op_sub Expression5
  141            | Expression5

  142 Expression5: Expression5 MUL_OP PrimaryExpr
  143            | Expression5 Op_unary_and PrimaryExpr
  144            | UnaryExpr

  145 REL_OP: Op_equality
  146       | Op_not_equal
  147       | Op_less
  148       | Op_greater
  149       | Op_greater_eq
  150       | Op_less_eq

  151 MUL_OP: Op_mult
  152       | Op_divide
  153       | Op_mod
  154       | Op_less_less
  155       | Op_greater_greater
  156       | Op_unary_and

  157 UnaryExpr: PrimaryExpr
  158          | UnaryOp PrimaryExpr

  159 PrimaryExpr: Operand
  160            | PrimaryExpr Selector
  161            | PrimaryExpr Index
  162            | PrimaryExpr Slice
  163            | PrimaryExpr TypeAssertion
  164            | PrimaryExpr Arguments
  165            | OperandName StructLiteral

  166 StructLiteral: M_lcurly KeyValList M_rcurly

  167 KeyValList: %empty
  168           | Expression M_colon Expression
  169           | Expression M_colon Expression M_comma KeyValList

  170 Selector: M_dot Identifier

  171 Index: M_lsqbracket Expression M_rsqbracket

  172 Slice: M_lsqbracket M_colon M_rsqbracket
  173      | M_lsqbracket M_colon Expression M_rsqbracket
  174      | M_lsqbracket Expression M_colon M_rsqbracket
  175      | M_lsqbracket Expression M_colon Expression M_rsqbracket
  176      | M_lsqbracket M_colon Expression M_colon Expression M_rsqbracket
  177      | M_lsqbracket Expression M_colon Expression M_colon Expression M_rsqbracket

  178 TypeDecl: Key_type TypeSpec

  179 TypeSpec: Identifier Type

  180 TypeAssertion: M_dot M_lparan Type M_rparan

  181 Arguments: M_lparan M_rparan
  182          | M_lparan ExpressionList M_rparan
  183          | M_lparan ExpressionList DOTS M_rparan

  184 DOTS: M_dot M_dot M_dot

  185 ExpressionList: Expression
  186               | ExpressionList M_comma Expression

  187 MapType: Key_map M_lsqbracket Type M_rsqbracket Type

  188 StructType: Key_struct M_lcurly FieldDeclList M_rcurly
  189           | Key_struct M_semicolon FieldDeclList M_rcurly
  190           | Key_struct M_lcurly M_rcurly
  191           | Key_struct M_semicolon M_rcurly

  192 FieldDeclList: FieldDecl M_semicolon
  193              | FieldDeclList FieldDecl M_semicolon

  194 FieldDecl: IdentifierList Type String
  195          | IdentifierList Type

  196 PointerType: Op_mult Type

  197 ArrayType: M_lsqbracket Expression M_rsqbracket Type

  198 Literal: BasicLit
  199        | CompositeLit

  200 BasicLit: Int_lit
  201         | Float_lit
  202         | String
  203         | Bool_true
  204         | Bool_false
  205         | Imaginary_lit

  206 UnaryOp: Op_add
  207        | Op_sub
  208        | Op_unary_not
  209        | Op_pow
  210        | Op_mult
  211        | Op_unary_and

  212 String: String_lit

  213 PackageClause: Key_package Identifier

  214 ImportDeclList: %empty
  215               | ImportDeclList ImportDecl M_semicolon
  216               | ImportDecl M_semicolon

  217 ImportDecl: Key_import M_lparan ImportSpecList M_rparan
  218           | Key_import ImportSpec

  219 ImportSpecList: %empty
  220               | ImportSpecList ImportSpec M_semicolon
  221               | ImportSpec M_semicolon

  222 ImportSpec: Identifier ImportPath
  223           | M_dot ImportPath
  224           | ImportPath

  225 ImportPath: String


Terminals, with rules where they appear

$end (0) 0
error (256)
T_int64 (258) 73
Identifier (259) 43 44 57 58 59 92 111 115 117 170 179 213 222
T_string (260) 76
Op_add (261) 27 30 139 206
Single_line_comment (262)
Multi_line_comment (263)
T_bool (264) 75
T_int (265) 74
T_int8 (266) 71
T_int16 (267) 70
T_int32 (268) 72
T_uint (269) 77
T_uint16 (270) 78
T_uint32 (271) 79
T_uint64 (272) 80
T_uintptr (273) 81
T_float32 (274) 82
T_float64 (275) 83
T_complex64 (276) 84
T_complex128 (277) 85
Key_break (278) 114 115
Key_case (279)
Key_const (280)
Key_continue (281) 116 117
Key_default (282)
Key_else (283) 120 121 122 123
Key_fallthrough (284)
Key_for (285) 126 127 128 129 130
Key_func (286) 43 44 59
Key_if (287) 118 119 120 121 122 123
Key_import (288) 217 218
Key_interface (289)
Key_map (290) 187
Key_package (291) 213
Key_range (292)
Key_return (293) 112 113
Key_select (294)
Key_struct (295) 188 189 190 191
Key_switch (296)
Key_type (297) 178
Key_var (298) 37
Key_class (299)
Key_private (300)
Key_protected (301)
Key_public (302)
Key_static (303)
Key_try (304)
Key_catch (305)
Key_finally (306)
Imaginary_lit (307) 205
Float_lit (308) 201
Int_lit (309) 200
String_lit (310) 212
Op_greater_greater (311) 155
Op_less_less (312) 154
Op_greater (313) 148
Op_less (314) 147
Op_greater_eq (315) 149
Op_less_eq (316) 150
Op_not_equal (317) 146
Op_equality (318) 145
Op_assign (319) 27 28 30 31 32 33 34 35 36
Op_unary_add (320) 25
Op_unary_sub (321) 26
Op_sub (322) 28 31 140 207
Op_mult (323) 151 196 210
Op_divide (324) 152
Op_mod (325) 153
Op_pow (326) 33 209
Op_relational_and (327) 134
Op_relational_or (328) 132
Op_unary_and (329) 143 156 211
Op_unary_or (330) 32 138
Op_unary_not (331) 208
M_question (332)
M_semicolon (333) 1 7 8 61 62 94 96 98 119 122 123 126 129 189 191
    192 193 215 216 220 221
M_colon (334) 103 111 168 169 172 173 174 175 176 177
M_comma (335) 51 53 55 58 97 98 101 169 186
M_lcurly (336) 2 93 95 97 166 188 190
M_rcurly (337) 2 93 94 95 96 97 98 166 188 189 190 191
M_lparan (338) 47 49 50 51 91 180 181 182 183 217
M_rparan (339) 47 49 50 51 91 180 181 182 183 217
M_lsqbracket (340) 67 99 171 172 173 174 175 176 177 187 197
M_rsqbracket (341) 67 99 171 172 173 174 175 176 177 187 197
M_dot (342) 170 180 184 223
M_doublequotes (343)
M_singlequotes (344)
M_underscore (345)
Bool_true (346) 203
Bool_false (347) 204


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
SourceFile (94)
    on left: 1, on right: 0
Block (95)
    on left: 2, on right: 15 44 118 119 120 121 122 123 126 127 128
    129 130
OPENB (96)
    on left: 3, on right: 2 43 44 118 119 120 121 122 123 126 127 129
    130
CLOSEB (97)
    on left: 4, on right: 2 43 44 118 119 120 121 122 123 126 127 129
    130
BrkBlk (98)
    on left: 5, on right: 126 127 128 129 130
BrkBlkEnd (99)
    on left: 6, on right: 126 127 128 129 130
StatementList (100)
    on left: 7 8, on right: 2 7
Statement (101)
    on left: 9 10 11 12 13 14 15 16 17, on right: 7 8 111
SimpleStmt (102)
    on left: 18 19 20 21 22, on right: 11 119 122 123 126 129
EmptyStmt (103)
    on left: 23, on right: 18 130
ExpressionStmt (104)
    on left: 24, on right: 19 126
IncDecStmt (105)
    on left: 25 26 27 28, on right: 20
Assignment (106)
    on left: 29, on right: 21
ASN_OP (107)
    on left: 30 31 32 33 34 35, on right: 29 39 40
ShortVarDecl (108)
    on left: 36, on right: 22
VarDecl (109)
    on left: 37, on right: 42
VarSpec (110)
    on left: 38 39 40, on right: 37
Declaration (111)
    on left: 41 42, on right: 9 108
FunctionDecl (112)
    on left: 43 44, on right: 109
Signature (113)
    on left: 45 46, on right: 43 44 59
Result (114)
    on left: 47 48, on right: 46
Parameters (115)
    on left: 49 50 51, on right: 45 46 60
ParameterList (116)
    on left: 52 53, on right: 50 51 53
ParameterDecl (117)
    on left: 54, on right: 52 53
TypeList (118)
    on left: 55 56, on right: 47 55
IdentifierList (119)
    on left: 57 58, on right: 38 39 40 54 58 194 195
MethodDecl (120)
    on left: 59, on right: 110
Receiver (121)
    on left: 60, on right: 59
TopLevelDeclList (122)
    on left: 61 62, on right: 1 61
CompositeLit (123)
    on left: 63, on right: 199
LiteralType (124)
    on left: 64 65 66 67 68 69, on right: 63 86
VarType (125)
    on left: 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85, on right:
    88
Type (126)
    on left: 86 87 88, on right: 38 39 48 54 55 56 99 179 180 187 194
    195 196 197
Operand (127)
    on left: 89 90 91, on right: 67 159
OperandName (128)
    on left: 92, on right: 87 90 165
LiteralValue (129)
    on left: 93 94 95 96 97 98, on right: 63 105 107
SliceType (130)
    on left: 99, on right: 68
ElementList (131)
    on left: 100 101, on right: 95 96 97 98 101
KeyedElement (132)
    on left: 102 103, on right: 100 101
Key (133)
    on left: 104 105, on right: 103
Element (134)
    on left: 106 107, on right: 102 103
TopLevelDecl (135)
    on left: 108 109 110, on right: 61 62
LabeledStmt (136)
    on left: 111, on right: 10
ReturnStmt (137)
    on left: 112 113, on right: 12
BreakStmt (138)
    on left: 114 115, on right: 13
ContinueStmt (139)
    on left: 116 117, on right: 14
IfStmt (140)
    on left: 118 119 120 121 122 123, on right: 16 121 122
EmptyExpr (141)
    on left: 124, on right: 129
Empty (142)
    on left: 125, on right: 130
ForStmt (143)
    on left: 126 127 128 129 130, on right: 17
Expression (144)
    on left: 131, on right: 24 25 26 27 28 91 104 106 118 119 120 121
    122 123 127 130 168 169 171 173 174 175 176 177 185 186 197
Expression1 (145)
    on left: 132 133, on right: 131 132
Expression2 (146)
    on left: 134 135, on right: 132 133 134
Expression3 (147)
    on left: 136 137, on right: 134 135 136
Expression4 (148)
    on left: 138 139 140 141, on right: 136 137 138 139 140
Expression5 (149)
    on left: 142 143 144, on right: 138 139 140 141 142 143
REL_OP (150)
    on left: 145 146 147 148 149 150, on right: 136
MUL_OP (151)
    on left: 151 152 153 154 155 156, on right: 34 142
UnaryExpr (152)
    on left: 157 158, on right: 144
PrimaryExpr (153)
    on left: 159 160 161 162 163 164 165, on right: 142 143 157 158
    160 161 162 163 164
StructLiteral (154)
    on left: 166, on right: 165
KeyValList (155)
    on left: 167 168 169, on right: 166 169
Selector (156)
    on left: 170, on right: 160
Index (157)
    on left: 171, on right: 161
Slice (158)
    on left: 172 173 174 175 176 177, on right: 162
TypeDecl (159)
    on left: 178, on right: 41
TypeSpec (160)
    on left: 179, on right: 178
TypeAssertion (161)
    on left: 180, on right: 163
Arguments (162)
    on left: 181 182 183, on right: 164
DOTS (163)
    on left: 184, on right: 67 183
ExpressionList (164)
    on left: 185 186, on right: 29 36 39 40 113 182 183 186
MapType (165)
    on left: 187, on right: 69
StructType (166)
    on left: 188 189 190 191, on right: 64
FieldDeclList (167)
    on left: 192 193, on right: 188 189 193
FieldDecl (168)
    on left: 194 195, on right: 192 193
PointerType (169)
    on left: 196, on right: 66
ArrayType (170)
    on left: 197, on right: 65
Literal (171)
    on left: 198 199, on right: 89
BasicLit (172)
    on left: 200 201 202 203 204 205, on right: 198
UnaryOp (173)
    on left: 206 207 208 209 210 211, on right: 158
String (174)
    on left: 212, on right: 194 202 225
PackageClause (175)
    on left: 213, on right: 1
ImportDeclList (176)
    on left: 214 215 216, on right: 1 215
ImportDecl (177)
    on left: 217 218, on right: 215 216
ImportSpecList (178)
    on left: 219 220 221, on right: 217 220
ImportSpec (179)
    on left: 222 223 224, on right: 218 220 221
ImportPath (180)
    on left: 225, on right: 222 223 224


State 0

    0 $accept: . SourceFile $end

    Key_package  shift, and go to state 1

    SourceFile     go to state 2
    PackageClause  go to state 3


State 1

  213 PackageClause: Key_package . Identifier

    Identifier  shift, and go to state 4


State 2

    0 $accept: SourceFile . $end

    $end  shift, and go to state 5


State 3

    1 SourceFile: PackageClause . M_semicolon ImportDeclList TopLevelDeclList

    M_semicolon  shift, and go to state 6


State 4

  213 PackageClause: Key_package Identifier .

    $default  reduce using rule 213 (PackageClause)


State 5

    0 $accept: SourceFile $end .

    $default  accept


State 6

    1 SourceFile: PackageClause M_semicolon . ImportDeclList TopLevelDeclList

    Key_import  shift, and go to state 7

    Key_import  [reduce using rule 214 (ImportDeclList)]
    $default    reduce using rule 214 (ImportDeclList)

    ImportDeclList  go to state 8
    ImportDecl      go to state 9


State 7

  217 ImportDecl: Key_import . M_lparan ImportSpecList M_rparan
  218           | Key_import . ImportSpec

    Identifier  shift, and go to state 10
    String_lit  shift, and go to state 11
    M_lparan    shift, and go to state 12
    M_dot       shift, and go to state 13

    String      go to state 14
    ImportSpec  go to state 15
    ImportPath  go to state 16


State 8

    1 SourceFile: PackageClause M_semicolon ImportDeclList . TopLevelDeclList
  215 ImportDeclList: ImportDeclList . ImportDecl M_semicolon

    Key_func    shift, and go to state 17
    Key_import  shift, and go to state 7
    Key_type    shift, and go to state 18
    Key_var     shift, and go to state 19

    VarDecl           go to state 20
    Declaration       go to state 21
    FunctionDecl      go to state 22
    MethodDecl        go to state 23
    TopLevelDeclList  go to state 24
    TopLevelDecl      go to state 25
    TypeDecl          go to state 26
    ImportDecl        go to state 27


State 9

  216 ImportDeclList: ImportDecl . M_semicolon

    M_semicolon  shift, and go to state 28


State 10

  222 ImportSpec: Identifier . ImportPath

    String_lit  shift, and go to state 11

    String      go to state 14
    ImportPath  go to state 29


State 11

  212 String: String_lit .

    $default  reduce using rule 212 (String)


State 12

  217 ImportDecl: Key_import M_lparan . ImportSpecList M_rparan

    Identifier  shift, and go to state 10
    String_lit  shift, and go to state 11
    M_dot       shift, and go to state 13

    Identifier  [reduce using rule 219 (ImportSpecList)]
    String_lit  [reduce using rule 219 (ImportSpecList)]
    M_dot       [reduce using rule 219 (ImportSpecList)]
    $default    reduce using rule 219 (ImportSpecList)

    String          go to state 14
    ImportSpecList  go to state 30
    ImportSpec      go to state 31
    ImportPath      go to state 16


State 13

  223 ImportSpec: M_dot . ImportPath

    String_lit  shift, and go to state 11

    String      go to state 14
    ImportPath  go to state 32


State 14

  225 ImportPath: String .

    $default  reduce using rule 225 (ImportPath)


State 15

  218 ImportDecl: Key_import ImportSpec .

    $default  reduce using rule 218 (ImportDecl)


State 16

  224 ImportSpec: ImportPath .

    $default  reduce using rule 224 (ImportSpec)


State 17

   43 FunctionDecl: Key_func . Identifier OPENB Signature CLOSEB
   44             | Key_func . Identifier OPENB Signature Block CLOSEB
   59 MethodDecl: Key_func . Receiver Identifier Signature

    Identifier  shift, and go to state 33
    M_lparan    shift, and go to state 34

    Parameters  go to state 35
    Receiver    go to state 36


State 18

  178 TypeDecl: Key_type . TypeSpec

    Identifier  shift, and go to state 37

    TypeSpec  go to state 38


State 19

   37 VarDecl: Key_var . VarSpec

    Identifier  shift, and go to state 39

    VarSpec         go to state 40
    IdentifierList  go to state 41


State 20

   42 Declaration: VarDecl .

    $default  reduce using rule 42 (Declaration)


State 21

  108 TopLevelDecl: Declaration .

    $default  reduce using rule 108 (TopLevelDecl)


State 22

  109 TopLevelDecl: FunctionDecl .

    $default  reduce using rule 109 (TopLevelDecl)


State 23

  110 TopLevelDecl: MethodDecl .

    $default  reduce using rule 110 (TopLevelDecl)


State 24

    1 SourceFile: PackageClause M_semicolon ImportDeclList TopLevelDeclList .
   61 TopLevelDeclList: TopLevelDeclList . TopLevelDecl M_semicolon

    Key_func  shift, and go to state 17
    Key_type  shift, and go to state 18
    Key_var   shift, and go to state 19

    $default  reduce using rule 1 (SourceFile)

    VarDecl       go to state 20
    Declaration   go to state 21
    FunctionDecl  go to state 22
    MethodDecl    go to state 23
    TopLevelDecl  go to state 42
    TypeDecl      go to state 26


State 25

   62 TopLevelDeclList: TopLevelDecl . M_semicolon

    M_semicolon  shift, and go to state 43


State 26

   41 Declaration: TypeDecl .

    $default  reduce using rule 41 (Declaration)


State 27

  215 ImportDeclList: ImportDeclList ImportDecl . M_semicolon

    M_semicolon  shift, and go to state 44


State 28

  216 ImportDeclList: ImportDecl M_semicolon .

    $default  reduce using rule 216 (ImportDeclList)


State 29

  222 ImportSpec: Identifier ImportPath .

    $default  reduce using rule 222 (ImportSpec)


State 30

  217 ImportDecl: Key_import M_lparan ImportSpecList . M_rparan
  220 ImportSpecList: ImportSpecList . ImportSpec M_semicolon

    Identifier  shift, and go to state 10
    String_lit  shift, and go to state 11
    M_rparan    shift, and go to state 45
    M_dot       shift, and go to state 13

    String      go to state 14
    ImportSpec  go to state 46
    ImportPath  go to state 16


State 31

  221 ImportSpecList: ImportSpec . M_semicolon

    M_semicolon  shift, and go to state 47


State 32

  223 ImportSpec: M_dot ImportPath .

    $default  reduce using rule 223 (ImportSpec)


State 33

   43 FunctionDecl: Key_func Identifier . OPENB Signature CLOSEB
   44             | Key_func Identifier . OPENB Signature Block CLOSEB

    $default  reduce using rule 3 (OPENB)

    OPENB  go to state 48


State 34

   49 Parameters: M_lparan . M_rparan
   50           | M_lparan . ParameterList M_rparan
   51           | M_lparan . ParameterList M_comma M_rparan

    Identifier  shift, and go to state 39
    M_rparan    shift, and go to state 49

    ParameterList   go to state 50
    ParameterDecl   go to state 51
    IdentifierList  go to state 52


State 35

   60 Receiver: Parameters .

    $default  reduce using rule 60 (Receiver)


State 36

   59 MethodDecl: Key_func Receiver . Identifier Signature

    Identifier  shift, and go to state 53


State 37

  179 TypeSpec: Identifier . Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 77
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 83


State 38

  178 TypeDecl: Key_type TypeSpec .

    $default  reduce using rule 178 (TypeDecl)


State 39

   57 IdentifierList: Identifier .

    $default  reduce using rule 57 (IdentifierList)


State 40

   37 VarDecl: Key_var VarSpec .

    $default  reduce using rule 37 (VarDecl)


State 41

   38 VarSpec: IdentifierList . Type
   39        | IdentifierList . Type ASN_OP ExpressionList
   40        | IdentifierList . ASN_OP ExpressionList
   58 IdentifierList: IdentifierList . M_comma Identifier

    T_int64             shift, and go to state 54
    Identifier          shift, and go to state 55
    T_string            shift, and go to state 56
    Op_add              shift, and go to state 84
    T_bool              shift, and go to state 57
    T_int               shift, and go to state 58
    T_int8              shift, and go to state 59
    T_int16             shift, and go to state 60
    T_int32             shift, and go to state 61
    T_uint              shift, and go to state 62
    T_uint16            shift, and go to state 63
    T_uint32            shift, and go to state 64
    T_uint64            shift, and go to state 65
    T_uintptr           shift, and go to state 66
    T_float32           shift, and go to state 67
    T_float64           shift, and go to state 68
    T_complex64         shift, and go to state 69
    T_complex128        shift, and go to state 70
    Key_map             shift, and go to state 71
    Key_struct          shift, and go to state 72
    Op_greater_greater  shift, and go to state 85
    Op_less_less        shift, and go to state 86
    Op_assign           shift, and go to state 87
    Op_sub              shift, and go to state 88
    Op_mult             shift, and go to state 89
    Op_divide           shift, and go to state 90
    Op_mod              shift, and go to state 91
    Op_pow              shift, and go to state 92
    Op_unary_and        shift, and go to state 93
    Op_unary_or         shift, and go to state 94
    M_comma             shift, and go to state 95
    M_lsqbracket        shift, and go to state 74

    ASN_OP       go to state 96
    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 97
    OperandName  go to state 78
    SliceType    go to state 79
    MUL_OP       go to state 98
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 83


State 42

   61 TopLevelDeclList: TopLevelDeclList TopLevelDecl . M_semicolon

    M_semicolon  shift, and go to state 99


State 43

   62 TopLevelDeclList: TopLevelDecl M_semicolon .

    $default  reduce using rule 62 (TopLevelDeclList)


State 44

  215 ImportDeclList: ImportDeclList ImportDecl M_semicolon .

    $default  reduce using rule 215 (ImportDeclList)


State 45

  217 ImportDecl: Key_import M_lparan ImportSpecList M_rparan .

    $default  reduce using rule 217 (ImportDecl)


State 46

  220 ImportSpecList: ImportSpecList ImportSpec . M_semicolon

    M_semicolon  shift, and go to state 100


State 47

  221 ImportSpecList: ImportSpec M_semicolon .

    $default  reduce using rule 221 (ImportSpecList)


State 48

   43 FunctionDecl: Key_func Identifier OPENB . Signature CLOSEB
   44             | Key_func Identifier OPENB . Signature Block CLOSEB

    M_lparan  shift, and go to state 34

    Signature   go to state 101
    Parameters  go to state 102


State 49

   49 Parameters: M_lparan M_rparan .

    $default  reduce using rule 49 (Parameters)


State 50

   50 Parameters: M_lparan ParameterList . M_rparan
   51           | M_lparan ParameterList . M_comma M_rparan
   53 ParameterList: ParameterList . M_comma ParameterDecl

    M_comma   shift, and go to state 103
    M_rparan  shift, and go to state 104


State 51

   52 ParameterList: ParameterDecl .

    $default  reduce using rule 52 (ParameterList)


State 52

   54 ParameterDecl: IdentifierList . Type
   58 IdentifierList: IdentifierList . M_comma Identifier

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_comma       shift, and go to state 95
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 105
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 83


State 53

   59 MethodDecl: Key_func Receiver Identifier . Signature

    M_lparan  shift, and go to state 34

    Signature   go to state 106
    Parameters  go to state 102


State 54

   73 VarType: T_int64 .

    $default  reduce using rule 73 (VarType)


State 55

   92 OperandName: Identifier .

    $default  reduce using rule 92 (OperandName)


State 56

   76 VarType: T_string .

    $default  reduce using rule 76 (VarType)


State 57

   75 VarType: T_bool .

    $default  reduce using rule 75 (VarType)


State 58

   74 VarType: T_int .

    $default  reduce using rule 74 (VarType)


State 59

   71 VarType: T_int8 .

    $default  reduce using rule 71 (VarType)


State 60

   70 VarType: T_int16 .

    $default  reduce using rule 70 (VarType)


State 61

   72 VarType: T_int32 .

    $default  reduce using rule 72 (VarType)


State 62

   77 VarType: T_uint .

    $default  reduce using rule 77 (VarType)


State 63

   78 VarType: T_uint16 .

    $default  reduce using rule 78 (VarType)


State 64

   79 VarType: T_uint32 .

    $default  reduce using rule 79 (VarType)


State 65

   80 VarType: T_uint64 .

    $default  reduce using rule 80 (VarType)


State 66

   81 VarType: T_uintptr .

    $default  reduce using rule 81 (VarType)


State 67

   82 VarType: T_float32 .

    $default  reduce using rule 82 (VarType)


State 68

   83 VarType: T_float64 .

    $default  reduce using rule 83 (VarType)


State 69

   84 VarType: T_complex64 .

    $default  reduce using rule 84 (VarType)


State 70

   85 VarType: T_complex128 .

    $default  reduce using rule 85 (VarType)


State 71

  187 MapType: Key_map . M_lsqbracket Type M_rsqbracket Type

    M_lsqbracket  shift, and go to state 107


State 72

  188 StructType: Key_struct . M_lcurly FieldDeclList M_rcurly
  189           | Key_struct . M_semicolon FieldDeclList M_rcurly
  190           | Key_struct . M_lcurly M_rcurly
  191           | Key_struct . M_semicolon M_rcurly

    M_semicolon  shift, and go to state 108
    M_lcurly     shift, and go to state 109


State 73

  196 PointerType: Op_mult . Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 110
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 83


State 74

   67 LiteralType: M_lsqbracket . DOTS M_rsqbracket Operand
   99 SliceType: M_lsqbracket . M_rsqbracket Type
  197 ArrayType: M_lsqbracket . Expression M_rsqbracket Type

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    M_rsqbracket   shift, and go to state 121
    M_dot          shift, and go to state 122
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression    go to state 129
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    DOTS          go to state 137
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 75

   86 Type: LiteralType .

    $default  reduce using rule 86 (Type)


State 76

   88 Type: VarType .

    $default  reduce using rule 88 (Type)


State 77

  179 TypeSpec: Identifier Type .

    $default  reduce using rule 179 (TypeSpec)


State 78

   87 Type: OperandName .

    $default  reduce using rule 87 (Type)


State 79

   68 LiteralType: SliceType .

    $default  reduce using rule 68 (LiteralType)


State 80

   69 LiteralType: MapType .

    $default  reduce using rule 69 (LiteralType)


State 81

   64 LiteralType: StructType .

    $default  reduce using rule 64 (LiteralType)


State 82

   66 LiteralType: PointerType .

    $default  reduce using rule 66 (LiteralType)


State 83

   65 LiteralType: ArrayType .

    $default  reduce using rule 65 (LiteralType)


State 84

   30 ASN_OP: Op_add . Op_assign

    Op_assign  shift, and go to state 142


State 85

  155 MUL_OP: Op_greater_greater .

    $default  reduce using rule 155 (MUL_OP)


State 86

  154 MUL_OP: Op_less_less .

    $default  reduce using rule 154 (MUL_OP)


State 87

   35 ASN_OP: Op_assign .

    $default  reduce using rule 35 (ASN_OP)


State 88

   31 ASN_OP: Op_sub . Op_assign

    Op_assign  shift, and go to state 143


State 89

  151 MUL_OP: Op_mult .
  196 PointerType: Op_mult . Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    $default  reduce using rule 151 (MUL_OP)

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 110
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 83


State 90

  152 MUL_OP: Op_divide .

    $default  reduce using rule 152 (MUL_OP)


State 91

  153 MUL_OP: Op_mod .

    $default  reduce using rule 153 (MUL_OP)


State 92

   33 ASN_OP: Op_pow . Op_assign

    Op_assign  shift, and go to state 144


State 93

  156 MUL_OP: Op_unary_and .

    $default  reduce using rule 156 (MUL_OP)


State 94

   32 ASN_OP: Op_unary_or . Op_assign

    Op_assign  shift, and go to state 145


State 95

   58 IdentifierList: IdentifierList M_comma . Identifier

    Identifier  shift, and go to state 146


State 96

   40 VarSpec: IdentifierList ASN_OP . ExpressionList

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit    go to state 125
    LiteralType     go to state 126
    Operand         go to state 127
    OperandName     go to state 128
    SliceType       go to state 79
    Expression      go to state 147
    Expression1     go to state 130
    Expression2     go to state 131
    Expression3     go to state 132
    Expression4     go to state 133
    Expression5     go to state 134
    UnaryExpr       go to state 135
    PrimaryExpr     go to state 136
    ExpressionList  go to state 148
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    ArrayType       go to state 83
    Literal         go to state 138
    BasicLit        go to state 139
    UnaryOp         go to state 140
    String          go to state 141


State 97

   38 VarSpec: IdentifierList Type .
   39        | IdentifierList Type . ASN_OP ExpressionList

    Op_add              shift, and go to state 84
    Op_greater_greater  shift, and go to state 85
    Op_less_less        shift, and go to state 86
    Op_assign           shift, and go to state 87
    Op_sub              shift, and go to state 88
    Op_mult             shift, and go to state 149
    Op_divide           shift, and go to state 90
    Op_mod              shift, and go to state 91
    Op_pow              shift, and go to state 92
    Op_unary_and        shift, and go to state 93
    Op_unary_or         shift, and go to state 94

    $default  reduce using rule 38 (VarSpec)

    ASN_OP  go to state 150
    MUL_OP  go to state 98


State 98

   34 ASN_OP: MUL_OP . Op_assign

    Op_assign  shift, and go to state 151


State 99

   61 TopLevelDeclList: TopLevelDeclList TopLevelDecl M_semicolon .

    $default  reduce using rule 61 (TopLevelDeclList)


State 100

  220 ImportSpecList: ImportSpecList ImportSpec M_semicolon .

    $default  reduce using rule 220 (ImportSpecList)


State 101

   43 FunctionDecl: Key_func Identifier OPENB Signature . CLOSEB
   44             | Key_func Identifier OPENB Signature . Block CLOSEB

    M_lcurly  shift, and go to state 152

    $default  reduce using rule 4 (CLOSEB)

    Block   go to state 153
    CLOSEB  go to state 154


State 102

   45 Signature: Parameters .
   46          | Parameters . Result

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lparan      shift, and go to state 155
    M_lsqbracket  shift, and go to state 74

    $default  reduce using rule 45 (Signature)

    Result       go to state 156
    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 157
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 83


State 103

   51 Parameters: M_lparan ParameterList M_comma . M_rparan
   53 ParameterList: ParameterList M_comma . ParameterDecl

    Identifier  shift, and go to state 39
    M_rparan    shift, and go to state 158

    ParameterDecl   go to state 159
    IdentifierList  go to state 52


State 104

   50 Parameters: M_lparan ParameterList M_rparan .

    $default  reduce using rule 50 (Parameters)


State 105

   54 ParameterDecl: IdentifierList Type .

    $default  reduce using rule 54 (ParameterDecl)


State 106

   59 MethodDecl: Key_func Receiver Identifier Signature .

    $default  reduce using rule 59 (MethodDecl)


State 107

  187 MapType: Key_map M_lsqbracket . Type M_rsqbracket Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 160
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 83


State 108

  189 StructType: Key_struct M_semicolon . FieldDeclList M_rcurly
  191           | Key_struct M_semicolon . M_rcurly

    Identifier  shift, and go to state 39
    M_rcurly    shift, and go to state 161

    IdentifierList  go to state 162
    FieldDeclList   go to state 163
    FieldDecl       go to state 164


State 109

  188 StructType: Key_struct M_lcurly . FieldDeclList M_rcurly
  190           | Key_struct M_lcurly . M_rcurly

    Identifier  shift, and go to state 39
    M_rcurly    shift, and go to state 165

    IdentifierList  go to state 162
    FieldDeclList   go to state 166
    FieldDecl       go to state 164


State 110

  196 PointerType: Op_mult Type .

    $default  reduce using rule 196 (PointerType)


State 111

  206 UnaryOp: Op_add .

    $default  reduce using rule 206 (UnaryOp)


State 112

  205 BasicLit: Imaginary_lit .

    $default  reduce using rule 205 (BasicLit)


State 113

  201 BasicLit: Float_lit .

    $default  reduce using rule 201 (BasicLit)


State 114

  200 BasicLit: Int_lit .

    $default  reduce using rule 200 (BasicLit)


State 115

  207 UnaryOp: Op_sub .

    $default  reduce using rule 207 (UnaryOp)


State 116

  196 PointerType: Op_mult . Type
  210 UnaryOp: Op_mult .

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    Identifier    [reduce using rule 210 (UnaryOp)]
    Key_map       [reduce using rule 210 (UnaryOp)]
    Key_struct    [reduce using rule 210 (UnaryOp)]
    Op_mult       [reduce using rule 210 (UnaryOp)]
    M_lsqbracket  [reduce using rule 210 (UnaryOp)]
    $default      reduce using rule 210 (UnaryOp)

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 110
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 83


State 117

  209 UnaryOp: Op_pow .

    $default  reduce using rule 209 (UnaryOp)


State 118

  211 UnaryOp: Op_unary_and .

    $default  reduce using rule 211 (UnaryOp)


State 119

  208 UnaryOp: Op_unary_not .

    $default  reduce using rule 208 (UnaryOp)


State 120

   91 Operand: M_lparan . Expression M_rparan

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression    go to state 167
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 121

   99 SliceType: M_lsqbracket M_rsqbracket . Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 168
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 83


State 122

  184 DOTS: M_dot . M_dot M_dot

    M_dot  shift, and go to state 169


State 123

  203 BasicLit: Bool_true .

    $default  reduce using rule 203 (BasicLit)


State 124

  204 BasicLit: Bool_false .

    $default  reduce using rule 204 (BasicLit)


State 125

  199 Literal: CompositeLit .

    $default  reduce using rule 199 (Literal)


State 126

   63 CompositeLit: LiteralType . LiteralValue

    M_semicolon  shift, and go to state 170
    M_lcurly     shift, and go to state 171

    LiteralValue  go to state 172


State 127

  159 PrimaryExpr: Operand .

    $default  reduce using rule 159 (PrimaryExpr)


State 128

   90 Operand: OperandName .
  165 PrimaryExpr: OperandName . StructLiteral

    M_lcurly  shift, and go to state 173

    M_lcurly  [reduce using rule 90 (Operand)]
    $default  reduce using rule 90 (Operand)

    StructLiteral  go to state 174


State 129

  197 ArrayType: M_lsqbracket Expression . M_rsqbracket Type

    M_rsqbracket  shift, and go to state 175


State 130

  131 Expression: Expression1 .
  132 Expression1: Expression1 . Op_relational_or Expression2

    Op_relational_or  shift, and go to state 176

    $default  reduce using rule 131 (Expression)


State 131

  133 Expression1: Expression2 .
  134 Expression2: Expression2 . Op_relational_and Expression3

    Op_relational_and  shift, and go to state 177

    $default  reduce using rule 133 (Expression1)


State 132

  135 Expression2: Expression3 .
  136 Expression3: Expression3 . REL_OP Expression4

    Op_greater     shift, and go to state 178
    Op_less        shift, and go to state 179
    Op_greater_eq  shift, and go to state 180
    Op_less_eq     shift, and go to state 181
    Op_not_equal   shift, and go to state 182
    Op_equality    shift, and go to state 183

    $default  reduce using rule 135 (Expression2)

    REL_OP  go to state 184


State 133

  137 Expression3: Expression4 .
  138 Expression4: Expression4 . Op_unary_or Expression5
  139            | Expression4 . Op_add Expression5
  140            | Expression4 . Op_sub Expression5

    Op_add       shift, and go to state 185
    Op_sub       shift, and go to state 186
    Op_unary_or  shift, and go to state 187

    Op_add       [reduce using rule 137 (Expression3)]
    Op_sub       [reduce using rule 137 (Expression3)]
    Op_unary_or  [reduce using rule 137 (Expression3)]
    $default     reduce using rule 137 (Expression3)


State 134

  141 Expression4: Expression5 .
  142 Expression5: Expression5 . MUL_OP PrimaryExpr
  143            | Expression5 . Op_unary_and PrimaryExpr

    Op_greater_greater  shift, and go to state 85
    Op_less_less        shift, and go to state 86
    Op_mult             shift, and go to state 149
    Op_divide           shift, and go to state 90
    Op_mod              shift, and go to state 91
    Op_unary_and        shift, and go to state 188

    Op_greater_greater  [reduce using rule 141 (Expression4)]
    Op_less_less        [reduce using rule 141 (Expression4)]
    Op_mult             [reduce using rule 141 (Expression4)]
    Op_divide           [reduce using rule 141 (Expression4)]
    Op_mod              [reduce using rule 141 (Expression4)]
    Op_unary_and        [reduce using rule 141 (Expression4)]
    $default            reduce using rule 141 (Expression4)

    MUL_OP  go to state 189


State 135

  144 Expression5: UnaryExpr .

    $default  reduce using rule 144 (Expression5)


State 136

  157 UnaryExpr: PrimaryExpr .
  160 PrimaryExpr: PrimaryExpr . Selector
  161            | PrimaryExpr . Index
  162            | PrimaryExpr . Slice
  163            | PrimaryExpr . TypeAssertion
  164            | PrimaryExpr . Arguments

    M_lparan      shift, and go to state 190
    M_lsqbracket  shift, and go to state 191
    M_dot         shift, and go to state 192

    M_dot     [reduce using rule 157 (UnaryExpr)]
    $default  reduce using rule 157 (UnaryExpr)

    Selector       go to state 193
    Index          go to state 194
    Slice          go to state 195
    TypeAssertion  go to state 196
    Arguments      go to state 197


State 137

   67 LiteralType: M_lsqbracket DOTS . M_rsqbracket Operand

    M_rsqbracket  shift, and go to state 198


State 138

   89 Operand: Literal .

    $default  reduce using rule 89 (Operand)


State 139

  198 Literal: BasicLit .

    $default  reduce using rule 198 (Literal)


State 140

  158 UnaryExpr: UnaryOp . PrimaryExpr

    Identifier     shift, and go to state 55
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_mult        shift, and go to state 73
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    PrimaryExpr   go to state 199
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    String        go to state 141


State 141

  202 BasicLit: String .

    $default  reduce using rule 202 (BasicLit)


State 142

   30 ASN_OP: Op_add Op_assign .

    $default  reduce using rule 30 (ASN_OP)


State 143

   31 ASN_OP: Op_sub Op_assign .

    $default  reduce using rule 31 (ASN_OP)


State 144

   33 ASN_OP: Op_pow Op_assign .

    $default  reduce using rule 33 (ASN_OP)


State 145

   32 ASN_OP: Op_unary_or Op_assign .

    $default  reduce using rule 32 (ASN_OP)


State 146

   58 IdentifierList: IdentifierList M_comma Identifier .

    $default  reduce using rule 58 (IdentifierList)


State 147

  185 ExpressionList: Expression .

    $default  reduce using rule 185 (ExpressionList)


State 148

   40 VarSpec: IdentifierList ASN_OP ExpressionList .
  186 ExpressionList: ExpressionList . M_comma Expression

    M_comma  shift, and go to state 200

    $default  reduce using rule 40 (VarSpec)


State 149

  151 MUL_OP: Op_mult .

    $default  reduce using rule 151 (MUL_OP)


State 150

   39 VarSpec: IdentifierList Type ASN_OP . ExpressionList

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit    go to state 125
    LiteralType     go to state 126
    Operand         go to state 127
    OperandName     go to state 128
    SliceType       go to state 79
    Expression      go to state 147
    Expression1     go to state 130
    Expression2     go to state 131
    Expression3     go to state 132
    Expression4     go to state 133
    Expression5     go to state 134
    UnaryExpr       go to state 135
    PrimaryExpr     go to state 136
    ExpressionList  go to state 201
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    ArrayType       go to state 83
    Literal         go to state 138
    BasicLit        go to state 139
    UnaryOp         go to state 140
    String          go to state 141


State 151

   34 ASN_OP: MUL_OP Op_assign .

    $default  reduce using rule 34 (ASN_OP)


State 152

    2 Block: M_lcurly . OPENB StatementList CLOSEB M_rcurly

    $default  reduce using rule 3 (OPENB)

    OPENB  go to state 202


State 153

   44 FunctionDecl: Key_func Identifier OPENB Signature Block . CLOSEB

    $default  reduce using rule 4 (CLOSEB)

    CLOSEB  go to state 203


State 154

   43 FunctionDecl: Key_func Identifier OPENB Signature CLOSEB .

    $default  reduce using rule 43 (FunctionDecl)


State 155

   47 Result: M_lparan . TypeList M_rparan

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    TypeList     go to state 204
    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 205
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 83


State 156

   46 Signature: Parameters Result .

    $default  reduce using rule 46 (Signature)


State 157

   48 Result: Type .

    $default  reduce using rule 48 (Result)


State 158

   51 Parameters: M_lparan ParameterList M_comma M_rparan .

    $default  reduce using rule 51 (Parameters)


State 159

   53 ParameterList: ParameterList M_comma ParameterDecl .

    $default  reduce using rule 53 (ParameterList)


State 160

  187 MapType: Key_map M_lsqbracket Type . M_rsqbracket Type

    M_rsqbracket  shift, and go to state 206


State 161

  191 StructType: Key_struct M_semicolon M_rcurly .

    $default  reduce using rule 191 (StructType)


State 162

   58 IdentifierList: IdentifierList . M_comma Identifier
  194 FieldDecl: IdentifierList . Type String
  195          | IdentifierList . Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_comma       shift, and go to state 95
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 207
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 83


State 163

  189 StructType: Key_struct M_semicolon FieldDeclList . M_rcurly
  193 FieldDeclList: FieldDeclList . FieldDecl M_semicolon

    Identifier  shift, and go to state 39
    M_rcurly    shift, and go to state 208

    IdentifierList  go to state 162
    FieldDecl       go to state 209


State 164

  192 FieldDeclList: FieldDecl . M_semicolon

    M_semicolon  shift, and go to state 210


State 165

  190 StructType: Key_struct M_lcurly M_rcurly .

    $default  reduce using rule 190 (StructType)


State 166

  188 StructType: Key_struct M_lcurly FieldDeclList . M_rcurly
  193 FieldDeclList: FieldDeclList . FieldDecl M_semicolon

    Identifier  shift, and go to state 39
    M_rcurly    shift, and go to state 211

    IdentifierList  go to state 162
    FieldDecl       go to state 209


State 167

   91 Operand: M_lparan Expression . M_rparan

    M_rparan  shift, and go to state 212


State 168

   99 SliceType: M_lsqbracket M_rsqbracket Type .

    $default  reduce using rule 99 (SliceType)


State 169

  184 DOTS: M_dot M_dot . M_dot

    M_dot  shift, and go to state 213


State 170

   94 LiteralValue: M_semicolon . M_rcurly
   96             | M_semicolon . ElementList M_rcurly
   98             | M_semicolon . ElementList M_comma M_rcurly

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_semicolon    shift, and go to state 170
    M_lcurly       shift, and go to state 171
    M_rcurly       shift, and go to state 214
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    LiteralValue  go to state 215
    SliceType     go to state 79
    ElementList   go to state 216
    KeyedElement  go to state 217
    Key           go to state 218
    Element       go to state 219
    Expression    go to state 220
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 171

   93 LiteralValue: M_lcurly . M_rcurly
   95             | M_lcurly . ElementList M_rcurly
   97             | M_lcurly . ElementList M_comma M_rcurly

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_semicolon    shift, and go to state 170
    M_lcurly       shift, and go to state 171
    M_rcurly       shift, and go to state 221
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    LiteralValue  go to state 215
    SliceType     go to state 79
    ElementList   go to state 222
    KeyedElement  go to state 217
    Key           go to state 218
    Element       go to state 219
    Expression    go to state 220
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 172

   63 CompositeLit: LiteralType LiteralValue .

    $default  reduce using rule 63 (CompositeLit)


State 173

  166 StructLiteral: M_lcurly . KeyValList M_rcurly

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    $default  reduce using rule 167 (KeyValList)

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression    go to state 223
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    KeyValList    go to state 224
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 174

  165 PrimaryExpr: OperandName StructLiteral .

    $default  reduce using rule 165 (PrimaryExpr)


State 175

  197 ArrayType: M_lsqbracket Expression M_rsqbracket . Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 225
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 83


State 176

  132 Expression1: Expression1 Op_relational_or . Expression2

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression2   go to state 226
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 177

  134 Expression2: Expression2 Op_relational_and . Expression3

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression3   go to state 227
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 178

  148 REL_OP: Op_greater .

    $default  reduce using rule 148 (REL_OP)


State 179

  147 REL_OP: Op_less .

    $default  reduce using rule 147 (REL_OP)


State 180

  149 REL_OP: Op_greater_eq .

    $default  reduce using rule 149 (REL_OP)


State 181

  150 REL_OP: Op_less_eq .

    $default  reduce using rule 150 (REL_OP)


State 182

  146 REL_OP: Op_not_equal .

    $default  reduce using rule 146 (REL_OP)


State 183

  145 REL_OP: Op_equality .

    $default  reduce using rule 145 (REL_OP)


State 184

  136 Expression3: Expression3 REL_OP . Expression4

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression4   go to state 228
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 185

  139 Expression4: Expression4 Op_add . Expression5

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression5   go to state 229
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 186

  140 Expression4: Expression4 Op_sub . Expression5

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression5   go to state 230
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 187

  138 Expression4: Expression4 Op_unary_or . Expression5

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression5   go to state 231
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 188

  143 Expression5: Expression5 Op_unary_and . PrimaryExpr
  156 MUL_OP: Op_unary_and .

    Identifier     shift, and go to state 55
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_mult        shift, and go to state 73
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    Identifier     [reduce using rule 156 (MUL_OP)]
    Key_map        [reduce using rule 156 (MUL_OP)]
    Key_struct     [reduce using rule 156 (MUL_OP)]
    Imaginary_lit  [reduce using rule 156 (MUL_OP)]
    Float_lit      [reduce using rule 156 (MUL_OP)]
    Int_lit        [reduce using rule 156 (MUL_OP)]
    String_lit     [reduce using rule 156 (MUL_OP)]
    Op_mult        [reduce using rule 156 (MUL_OP)]
    M_lparan       [reduce using rule 156 (MUL_OP)]
    M_lsqbracket   [reduce using rule 156 (MUL_OP)]
    Bool_true      [reduce using rule 156 (MUL_OP)]
    Bool_false     [reduce using rule 156 (MUL_OP)]

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    PrimaryExpr   go to state 232
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    String        go to state 141


State 189

  142 Expression5: Expression5 MUL_OP . PrimaryExpr

    Identifier     shift, and go to state 55
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_mult        shift, and go to state 73
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    PrimaryExpr   go to state 233
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    String        go to state 141


State 190

  181 Arguments: M_lparan . M_rparan
  182          | M_lparan . ExpressionList M_rparan
  183          | M_lparan . ExpressionList DOTS M_rparan

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_rparan       shift, and go to state 234
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit    go to state 125
    LiteralType     go to state 126
    Operand         go to state 127
    OperandName     go to state 128
    SliceType       go to state 79
    Expression      go to state 147
    Expression1     go to state 130
    Expression2     go to state 131
    Expression3     go to state 132
    Expression4     go to state 133
    Expression5     go to state 134
    UnaryExpr       go to state 135
    PrimaryExpr     go to state 136
    ExpressionList  go to state 235
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    ArrayType       go to state 83
    Literal         go to state 138
    BasicLit        go to state 139
    UnaryOp         go to state 140
    String          go to state 141


State 191

  171 Index: M_lsqbracket . Expression M_rsqbracket
  172 Slice: M_lsqbracket . M_colon M_rsqbracket
  173      | M_lsqbracket . M_colon Expression M_rsqbracket
  174      | M_lsqbracket . Expression M_colon M_rsqbracket
  175      | M_lsqbracket . Expression M_colon Expression M_rsqbracket
  176      | M_lsqbracket . M_colon Expression M_colon Expression M_rsqbracket
  177      | M_lsqbracket . Expression M_colon Expression M_colon Expression M_rsqbracket

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_colon        shift, and go to state 236
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression    go to state 237
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 192

  170 Selector: M_dot . Identifier
  180 TypeAssertion: M_dot . M_lparan Type M_rparan

    Identifier  shift, and go to state 238
    M_lparan    shift, and go to state 239


State 193

  160 PrimaryExpr: PrimaryExpr Selector .

    $default  reduce using rule 160 (PrimaryExpr)


State 194

  161 PrimaryExpr: PrimaryExpr Index .

    $default  reduce using rule 161 (PrimaryExpr)


State 195

  162 PrimaryExpr: PrimaryExpr Slice .

    $default  reduce using rule 162 (PrimaryExpr)


State 196

  163 PrimaryExpr: PrimaryExpr TypeAssertion .

    $default  reduce using rule 163 (PrimaryExpr)


State 197

  164 PrimaryExpr: PrimaryExpr Arguments .

    $default  reduce using rule 164 (PrimaryExpr)


State 198

   67 LiteralType: M_lsqbracket DOTS M_rsqbracket . Operand

    Identifier     shift, and go to state 55
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_mult        shift, and go to state 73
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 240
    OperandName   go to state 241
    SliceType     go to state 79
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    String        go to state 141


State 199

  158 UnaryExpr: UnaryOp PrimaryExpr .
  160 PrimaryExpr: PrimaryExpr . Selector
  161            | PrimaryExpr . Index
  162            | PrimaryExpr . Slice
  163            | PrimaryExpr . TypeAssertion
  164            | PrimaryExpr . Arguments

    M_lparan      shift, and go to state 190
    M_lsqbracket  shift, and go to state 191
    M_dot         shift, and go to state 192

    M_dot     [reduce using rule 158 (UnaryExpr)]
    $default  reduce using rule 158 (UnaryExpr)

    Selector       go to state 193
    Index          go to state 194
    Slice          go to state 195
    TypeAssertion  go to state 196
    Arguments      go to state 197


State 200

  186 ExpressionList: ExpressionList M_comma . Expression

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression    go to state 242
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 201

   39 VarSpec: IdentifierList Type ASN_OP ExpressionList .
  186 ExpressionList: ExpressionList . M_comma Expression

    M_comma  shift, and go to state 200

    $default  reduce using rule 39 (VarSpec)


State 202

    2 Block: M_lcurly OPENB . StatementList CLOSEB M_rcurly

    Identifier     shift, and go to state 243
    Op_add         shift, and go to state 111
    Key_break      shift, and go to state 244
    Key_continue   shift, and go to state 245
    Key_for        shift, and go to state 246
    Key_if         shift, and go to state 247
    Key_map        shift, and go to state 71
    Key_return     shift, and go to state 248
    Key_struct     shift, and go to state 72
    Key_type       shift, and go to state 18
    Key_var        shift, and go to state 19
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lcurly       shift, and go to state 152
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    $default  reduce using rule 23 (EmptyStmt)

    Block           go to state 249
    StatementList   go to state 250
    Statement       go to state 251
    SimpleStmt      go to state 252
    EmptyStmt       go to state 253
    ExpressionStmt  go to state 254
    IncDecStmt      go to state 255
    Assignment      go to state 256
    ShortVarDecl    go to state 257
    VarDecl         go to state 20
    Declaration     go to state 258
    CompositeLit    go to state 125
    LiteralType     go to state 126
    Operand         go to state 127
    OperandName     go to state 128
    SliceType       go to state 79
    LabeledStmt     go to state 259
    ReturnStmt      go to state 260
    BreakStmt       go to state 261
    ContinueStmt    go to state 262
    IfStmt          go to state 263
    ForStmt         go to state 264
    Expression      go to state 265
    Expression1     go to state 130
    Expression2     go to state 131
    Expression3     go to state 132
    Expression4     go to state 133
    Expression5     go to state 134
    UnaryExpr       go to state 135
    PrimaryExpr     go to state 136
    TypeDecl        go to state 26
    ExpressionList  go to state 266
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    ArrayType       go to state 83
    Literal         go to state 138
    BasicLit        go to state 139
    UnaryOp         go to state 140
    String          go to state 141


State 203

   44 FunctionDecl: Key_func Identifier OPENB Signature Block CLOSEB .

    $default  reduce using rule 44 (FunctionDecl)


State 204

   47 Result: M_lparan TypeList . M_rparan
   55 TypeList: TypeList . M_comma Type

    M_comma   shift, and go to state 267
    M_rparan  shift, and go to state 268


State 205

   56 TypeList: Type .

    $default  reduce using rule 56 (TypeList)


State 206

  187 MapType: Key_map M_lsqbracket Type M_rsqbracket . Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 269
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 83


State 207

  194 FieldDecl: IdentifierList Type . String
  195          | IdentifierList Type .

    String_lit  shift, and go to state 11

    $default  reduce using rule 195 (FieldDecl)

    String  go to state 270


State 208

  189 StructType: Key_struct M_semicolon FieldDeclList M_rcurly .

    $default  reduce using rule 189 (StructType)


State 209

  193 FieldDeclList: FieldDeclList FieldDecl . M_semicolon

    M_semicolon  shift, and go to state 271


State 210

  192 FieldDeclList: FieldDecl M_semicolon .

    $default  reduce using rule 192 (FieldDeclList)


State 211

  188 StructType: Key_struct M_lcurly FieldDeclList M_rcurly .

    $default  reduce using rule 188 (StructType)


State 212

   91 Operand: M_lparan Expression M_rparan .

    $default  reduce using rule 91 (Operand)


State 213

  184 DOTS: M_dot M_dot M_dot .

    $default  reduce using rule 184 (DOTS)


State 214

   94 LiteralValue: M_semicolon M_rcurly .

    $default  reduce using rule 94 (LiteralValue)


State 215

  105 Key: LiteralValue .
  107 Element: LiteralValue .

    M_colon   reduce using rule 105 (Key)
    $default  reduce using rule 107 (Element)


State 216

   96 LiteralValue: M_semicolon ElementList . M_rcurly
   98             | M_semicolon ElementList . M_comma M_rcurly
  101 ElementList: ElementList . M_comma KeyedElement

    M_comma   shift, and go to state 272
    M_rcurly  shift, and go to state 273


State 217

  100 ElementList: KeyedElement .

    $default  reduce using rule 100 (ElementList)


State 218

  103 KeyedElement: Key . M_colon Element

    M_colon  shift, and go to state 274


State 219

  102 KeyedElement: Element .

    $default  reduce using rule 102 (KeyedElement)


State 220

  104 Key: Expression .
  106 Element: Expression .

    M_colon   reduce using rule 104 (Key)
    $default  reduce using rule 106 (Element)


State 221

   93 LiteralValue: M_lcurly M_rcurly .

    $default  reduce using rule 93 (LiteralValue)


State 222

   95 LiteralValue: M_lcurly ElementList . M_rcurly
   97             | M_lcurly ElementList . M_comma M_rcurly
  101 ElementList: ElementList . M_comma KeyedElement

    M_comma   shift, and go to state 275
    M_rcurly  shift, and go to state 276


State 223

  168 KeyValList: Expression . M_colon Expression
  169           | Expression . M_colon Expression M_comma KeyValList

    M_colon  shift, and go to state 277


State 224

  166 StructLiteral: M_lcurly KeyValList . M_rcurly

    M_rcurly  shift, and go to state 278


State 225

  197 ArrayType: M_lsqbracket Expression M_rsqbracket Type .

    $default  reduce using rule 197 (ArrayType)


State 226

  132 Expression1: Expression1 Op_relational_or Expression2 .
  134 Expression2: Expression2 . Op_relational_and Expression3

    Op_relational_and  shift, and go to state 177

    $default  reduce using rule 132 (Expression1)


State 227

  134 Expression2: Expression2 Op_relational_and Expression3 .
  136 Expression3: Expression3 . REL_OP Expression4

    Op_greater     shift, and go to state 178
    Op_less        shift, and go to state 179
    Op_greater_eq  shift, and go to state 180
    Op_less_eq     shift, and go to state 181
    Op_not_equal   shift, and go to state 182
    Op_equality    shift, and go to state 183

    $default  reduce using rule 134 (Expression2)

    REL_OP  go to state 184


State 228

  136 Expression3: Expression3 REL_OP Expression4 .
  138 Expression4: Expression4 . Op_unary_or Expression5
  139            | Expression4 . Op_add Expression5
  140            | Expression4 . Op_sub Expression5

    Op_add       shift, and go to state 185
    Op_sub       shift, and go to state 186
    Op_unary_or  shift, and go to state 187

    Op_add       [reduce using rule 136 (Expression3)]
    Op_sub       [reduce using rule 136 (Expression3)]
    Op_unary_or  [reduce using rule 136 (Expression3)]
    $default     reduce using rule 136 (Expression3)


State 229

  139 Expression4: Expression4 Op_add Expression5 .
  142 Expression5: Expression5 . MUL_OP PrimaryExpr
  143            | Expression5 . Op_unary_and PrimaryExpr

    Op_greater_greater  shift, and go to state 85
    Op_less_less        shift, and go to state 86
    Op_mult             shift, and go to state 149
    Op_divide           shift, and go to state 90
    Op_mod              shift, and go to state 91
    Op_unary_and        shift, and go to state 188

    Op_greater_greater  [reduce using rule 139 (Expression4)]
    Op_less_less        [reduce using rule 139 (Expression4)]
    Op_mult             [reduce using rule 139 (Expression4)]
    Op_divide           [reduce using rule 139 (Expression4)]
    Op_mod              [reduce using rule 139 (Expression4)]
    Op_unary_and        [reduce using rule 139 (Expression4)]
    $default            reduce using rule 139 (Expression4)

    MUL_OP  go to state 189


State 230

  140 Expression4: Expression4 Op_sub Expression5 .
  142 Expression5: Expression5 . MUL_OP PrimaryExpr
  143            | Expression5 . Op_unary_and PrimaryExpr

    Op_greater_greater  shift, and go to state 85
    Op_less_less        shift, and go to state 86
    Op_mult             shift, and go to state 149
    Op_divide           shift, and go to state 90
    Op_mod              shift, and go to state 91
    Op_unary_and        shift, and go to state 188

    Op_greater_greater  [reduce using rule 140 (Expression4)]
    Op_less_less        [reduce using rule 140 (Expression4)]
    Op_mult             [reduce using rule 140 (Expression4)]
    Op_divide           [reduce using rule 140 (Expression4)]
    Op_mod              [reduce using rule 140 (Expression4)]
    Op_unary_and        [reduce using rule 140 (Expression4)]
    $default            reduce using rule 140 (Expression4)

    MUL_OP  go to state 189


State 231

  138 Expression4: Expression4 Op_unary_or Expression5 .
  142 Expression5: Expression5 . MUL_OP PrimaryExpr
  143            | Expression5 . Op_unary_and PrimaryExpr

    Op_greater_greater  shift, and go to state 85
    Op_less_less        shift, and go to state 86
    Op_mult             shift, and go to state 149
    Op_divide           shift, and go to state 90
    Op_mod              shift, and go to state 91
    Op_unary_and        shift, and go to state 188

    Op_greater_greater  [reduce using rule 138 (Expression4)]
    Op_less_less        [reduce using rule 138 (Expression4)]
    Op_mult             [reduce using rule 138 (Expression4)]
    Op_divide           [reduce using rule 138 (Expression4)]
    Op_mod              [reduce using rule 138 (Expression4)]
    Op_unary_and        [reduce using rule 138 (Expression4)]
    $default            reduce using rule 138 (Expression4)

    MUL_OP  go to state 189


State 232

  143 Expression5: Expression5 Op_unary_and PrimaryExpr .
  160 PrimaryExpr: PrimaryExpr . Selector
  161            | PrimaryExpr . Index
  162            | PrimaryExpr . Slice
  163            | PrimaryExpr . TypeAssertion
  164            | PrimaryExpr . Arguments

    M_lparan      shift, and go to state 190
    M_lsqbracket  shift, and go to state 191
    M_dot         shift, and go to state 192

    M_dot     [reduce using rule 143 (Expression5)]
    $default  reduce using rule 143 (Expression5)

    Selector       go to state 193
    Index          go to state 194
    Slice          go to state 195
    TypeAssertion  go to state 196
    Arguments      go to state 197


State 233

  142 Expression5: Expression5 MUL_OP PrimaryExpr .
  160 PrimaryExpr: PrimaryExpr . Selector
  161            | PrimaryExpr . Index
  162            | PrimaryExpr . Slice
  163            | PrimaryExpr . TypeAssertion
  164            | PrimaryExpr . Arguments

    M_lparan      shift, and go to state 190
    M_lsqbracket  shift, and go to state 191
    M_dot         shift, and go to state 192

    M_dot     [reduce using rule 142 (Expression5)]
    $default  reduce using rule 142 (Expression5)

    Selector       go to state 193
    Index          go to state 194
    Slice          go to state 195
    TypeAssertion  go to state 196
    Arguments      go to state 197


State 234

  181 Arguments: M_lparan M_rparan .

    $default  reduce using rule 181 (Arguments)


State 235

  182 Arguments: M_lparan ExpressionList . M_rparan
  183          | M_lparan ExpressionList . DOTS M_rparan
  186 ExpressionList: ExpressionList . M_comma Expression

    M_comma   shift, and go to state 200
    M_rparan  shift, and go to state 279
    M_dot     shift, and go to state 122

    DOTS  go to state 280


State 236

  172 Slice: M_lsqbracket M_colon . M_rsqbracket
  173      | M_lsqbracket M_colon . Expression M_rsqbracket
  176      | M_lsqbracket M_colon . Expression M_colon Expression M_rsqbracket

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    M_rsqbracket   shift, and go to state 281
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression    go to state 282
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 237

  171 Index: M_lsqbracket Expression . M_rsqbracket
  174 Slice: M_lsqbracket Expression . M_colon M_rsqbracket
  175      | M_lsqbracket Expression . M_colon Expression M_rsqbracket
  177      | M_lsqbracket Expression . M_colon Expression M_colon Expression M_rsqbracket

    M_colon       shift, and go to state 283
    M_rsqbracket  shift, and go to state 284


State 238

  170 Selector: M_dot Identifier .

    $default  reduce using rule 170 (Selector)


State 239

  180 TypeAssertion: M_dot M_lparan . Type M_rparan

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 285
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 83


State 240

   67 LiteralType: M_lsqbracket DOTS M_rsqbracket Operand .

    $default  reduce using rule 67 (LiteralType)


State 241

   90 Operand: OperandName .

    $default  reduce using rule 90 (Operand)


State 242

  186 ExpressionList: ExpressionList M_comma Expression .

    $default  reduce using rule 186 (ExpressionList)


State 243

   92 OperandName: Identifier .
  111 LabeledStmt: Identifier . M_colon Statement

    M_colon  shift, and go to state 286

    $default  reduce using rule 92 (OperandName)


State 244

  114 BreakStmt: Key_break .
  115          | Key_break . Identifier

    Identifier  shift, and go to state 287

    $default  reduce using rule 114 (BreakStmt)


State 245

  116 ContinueStmt: Key_continue .
  117             | Key_continue . Identifier

    Identifier  shift, and go to state 288

    $default  reduce using rule 116 (ContinueStmt)


State 246

  126 ForStmt: Key_for . OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB
  127        | Key_for . OPENB Expression BrkBlk Block BrkBlkEnd CLOSEB
  128        | Key_for . BrkBlk Block BrkBlkEnd
  129        | Key_for . OPENB SimpleStmt M_semicolon BrkBlk EmptyExpr M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB
  130        | Key_for . OPENB EmptyStmt Empty BrkBlk Expression Empty EmptyStmt Block BrkBlkEnd CLOSEB

    M_lcurly  reduce using rule 5 (BrkBlk)
    $default  reduce using rule 3 (OPENB)

    OPENB   go to state 289
    BrkBlk  go to state 290


State 247

  118 IfStmt: Key_if . OPENB Expression Block CLOSEB
  119       | Key_if . OPENB SimpleStmt M_semicolon Expression Block CLOSEB
  120       | Key_if . OPENB Expression Block Key_else Block CLOSEB
  121       | Key_if . OPENB Expression Block Key_else IfStmt CLOSEB
  122       | Key_if . OPENB SimpleStmt M_semicolon Expression Block Key_else IfStmt CLOSEB
  123       | Key_if . OPENB SimpleStmt M_semicolon Expression Block Key_else Block CLOSEB

    $default  reduce using rule 3 (OPENB)

    OPENB  go to state 291


State 248

  112 ReturnStmt: Key_return .
  113           | Key_return . ExpressionList

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    $default  reduce using rule 112 (ReturnStmt)

    CompositeLit    go to state 125
    LiteralType     go to state 126
    Operand         go to state 127
    OperandName     go to state 128
    SliceType       go to state 79
    Expression      go to state 147
    Expression1     go to state 130
    Expression2     go to state 131
    Expression3     go to state 132
    Expression4     go to state 133
    Expression5     go to state 134
    UnaryExpr       go to state 135
    PrimaryExpr     go to state 136
    ExpressionList  go to state 292
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    ArrayType       go to state 83
    Literal         go to state 138
    BasicLit        go to state 139
    UnaryOp         go to state 140
    String          go to state 141


State 249

   15 Statement: Block .

    $default  reduce using rule 15 (Statement)


State 250

    2 Block: M_lcurly OPENB StatementList . CLOSEB M_rcurly
    7 StatementList: StatementList . Statement M_semicolon

    Identifier     shift, and go to state 243
    Op_add         shift, and go to state 111
    Key_break      shift, and go to state 244
    Key_continue   shift, and go to state 245
    Key_for        shift, and go to state 246
    Key_if         shift, and go to state 247
    Key_map        shift, and go to state 71
    Key_return     shift, and go to state 248
    Key_struct     shift, and go to state 72
    Key_type       shift, and go to state 18
    Key_var        shift, and go to state 19
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lcurly       shift, and go to state 152
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    M_semicolon  reduce using rule 23 (EmptyStmt)
    $default     reduce using rule 4 (CLOSEB)

    Block           go to state 249
    CLOSEB          go to state 293
    Statement       go to state 294
    SimpleStmt      go to state 252
    EmptyStmt       go to state 253
    ExpressionStmt  go to state 254
    IncDecStmt      go to state 255
    Assignment      go to state 256
    ShortVarDecl    go to state 257
    VarDecl         go to state 20
    Declaration     go to state 258
    CompositeLit    go to state 125
    LiteralType     go to state 126
    Operand         go to state 127
    OperandName     go to state 128
    SliceType       go to state 79
    LabeledStmt     go to state 259
    ReturnStmt      go to state 260
    BreakStmt       go to state 261
    ContinueStmt    go to state 262
    IfStmt          go to state 263
    ForStmt         go to state 264
    Expression      go to state 265
    Expression1     go to state 130
    Expression2     go to state 131
    Expression3     go to state 132
    Expression4     go to state 133
    Expression5     go to state 134
    UnaryExpr       go to state 135
    PrimaryExpr     go to state 136
    TypeDecl        go to state 26
    ExpressionList  go to state 266
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    ArrayType       go to state 83
    Literal         go to state 138
    BasicLit        go to state 139
    UnaryOp         go to state 140
    String          go to state 141


State 251

    8 StatementList: Statement . M_semicolon

    M_semicolon  shift, and go to state 295


State 252

   11 Statement: SimpleStmt .

    $default  reduce using rule 11 (Statement)


State 253

   18 SimpleStmt: EmptyStmt .

    $default  reduce using rule 18 (SimpleStmt)


State 254

   19 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 19 (SimpleStmt)


State 255

   20 SimpleStmt: IncDecStmt .

    $default  reduce using rule 20 (SimpleStmt)


State 256

   21 SimpleStmt: Assignment .

    $default  reduce using rule 21 (SimpleStmt)


State 257

   22 SimpleStmt: ShortVarDecl .

    $default  reduce using rule 22 (SimpleStmt)


State 258

    9 Statement: Declaration .

    $default  reduce using rule 9 (Statement)


State 259

   10 Statement: LabeledStmt .

    $default  reduce using rule 10 (Statement)


State 260

   12 Statement: ReturnStmt .

    $default  reduce using rule 12 (Statement)


State 261

   13 Statement: BreakStmt .

    $default  reduce using rule 13 (Statement)


State 262

   14 Statement: ContinueStmt .

    $default  reduce using rule 14 (Statement)


State 263

   16 Statement: IfStmt .

    $default  reduce using rule 16 (Statement)


State 264

   17 Statement: ForStmt .

    $default  reduce using rule 17 (Statement)


State 265

   24 ExpressionStmt: Expression .
   25 IncDecStmt: Expression . Op_unary_add
   26           | Expression . Op_unary_sub
   27           | Expression . Op_add Op_assign Expression
   28           | Expression . Op_sub Op_assign Expression
  185 ExpressionList: Expression .

    Op_add        shift, and go to state 296
    Op_unary_add  shift, and go to state 297
    Op_unary_sub  shift, and go to state 298
    Op_sub        shift, and go to state 299

    Op_add       [reduce using rule 185 (ExpressionList)]
    Op_sub       [reduce using rule 185 (ExpressionList)]
    M_semicolon  reduce using rule 24 (ExpressionStmt)
    M_lcurly     reduce using rule 24 (ExpressionStmt)
    $default     reduce using rule 185 (ExpressionList)


State 266

   29 Assignment: ExpressionList . ASN_OP ExpressionList
   36 ShortVarDecl: ExpressionList . Op_assign ExpressionList
  186 ExpressionList: ExpressionList . M_comma Expression

    Op_add              shift, and go to state 84
    Op_greater_greater  shift, and go to state 85
    Op_less_less        shift, and go to state 86
    Op_assign           shift, and go to state 300
    Op_sub              shift, and go to state 88
    Op_mult             shift, and go to state 149
    Op_divide           shift, and go to state 90
    Op_mod              shift, and go to state 91
    Op_pow              shift, and go to state 92
    Op_unary_and        shift, and go to state 93
    Op_unary_or         shift, and go to state 94
    M_comma             shift, and go to state 200

    ASN_OP  go to state 301
    MUL_OP  go to state 98


State 267

   55 TypeList: TypeList M_comma . Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 302
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 83


State 268

   47 Result: M_lparan TypeList M_rparan .

    $default  reduce using rule 47 (Result)


State 269

  187 MapType: Key_map M_lsqbracket Type M_rsqbracket Type .

    $default  reduce using rule 187 (MapType)


State 270

  194 FieldDecl: IdentifierList Type String .

    $default  reduce using rule 194 (FieldDecl)


State 271

  193 FieldDeclList: FieldDeclList FieldDecl M_semicolon .

    $default  reduce using rule 193 (FieldDeclList)


State 272

   98 LiteralValue: M_semicolon ElementList M_comma . M_rcurly
  101 ElementList: ElementList M_comma . KeyedElement

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_semicolon    shift, and go to state 170
    M_lcurly       shift, and go to state 171
    M_rcurly       shift, and go to state 303
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    LiteralValue  go to state 215
    SliceType     go to state 79
    KeyedElement  go to state 304
    Key           go to state 218
    Element       go to state 219
    Expression    go to state 220
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 273

   96 LiteralValue: M_semicolon ElementList M_rcurly .

    $default  reduce using rule 96 (LiteralValue)


State 274

  103 KeyedElement: Key M_colon . Element

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_semicolon    shift, and go to state 170
    M_lcurly       shift, and go to state 171
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    LiteralValue  go to state 305
    SliceType     go to state 79
    Element       go to state 306
    Expression    go to state 307
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 275

   97 LiteralValue: M_lcurly ElementList M_comma . M_rcurly
  101 ElementList: ElementList M_comma . KeyedElement

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_semicolon    shift, and go to state 170
    M_lcurly       shift, and go to state 171
    M_rcurly       shift, and go to state 308
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    LiteralValue  go to state 215
    SliceType     go to state 79
    KeyedElement  go to state 304
    Key           go to state 218
    Element       go to state 219
    Expression    go to state 220
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 276

   95 LiteralValue: M_lcurly ElementList M_rcurly .

    $default  reduce using rule 95 (LiteralValue)


State 277

  168 KeyValList: Expression M_colon . Expression
  169           | Expression M_colon . Expression M_comma KeyValList

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression    go to state 309
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 278

  166 StructLiteral: M_lcurly KeyValList M_rcurly .

    $default  reduce using rule 166 (StructLiteral)


State 279

  182 Arguments: M_lparan ExpressionList M_rparan .

    $default  reduce using rule 182 (Arguments)


State 280

  183 Arguments: M_lparan ExpressionList DOTS . M_rparan

    M_rparan  shift, and go to state 310


State 281

  172 Slice: M_lsqbracket M_colon M_rsqbracket .

    $default  reduce using rule 172 (Slice)


State 282

  173 Slice: M_lsqbracket M_colon Expression . M_rsqbracket
  176      | M_lsqbracket M_colon Expression . M_colon Expression M_rsqbracket

    M_colon       shift, and go to state 311
    M_rsqbracket  shift, and go to state 312


State 283

  174 Slice: M_lsqbracket Expression M_colon . M_rsqbracket
  175      | M_lsqbracket Expression M_colon . Expression M_rsqbracket
  177      | M_lsqbracket Expression M_colon . Expression M_colon Expression M_rsqbracket

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    M_rsqbracket   shift, and go to state 313
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression    go to state 314
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 284

  171 Index: M_lsqbracket Expression M_rsqbracket .

    $default  reduce using rule 171 (Index)


State 285

  180 TypeAssertion: M_dot M_lparan Type . M_rparan

    M_rparan  shift, and go to state 315


State 286

  111 LabeledStmt: Identifier M_colon . Statement

    Identifier     shift, and go to state 243
    Op_add         shift, and go to state 111
    Key_break      shift, and go to state 244
    Key_continue   shift, and go to state 245
    Key_for        shift, and go to state 246
    Key_if         shift, and go to state 247
    Key_map        shift, and go to state 71
    Key_return     shift, and go to state 248
    Key_struct     shift, and go to state 72
    Key_type       shift, and go to state 18
    Key_var        shift, and go to state 19
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lcurly       shift, and go to state 152
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    $default  reduce using rule 23 (EmptyStmt)

    Block           go to state 249
    Statement       go to state 316
    SimpleStmt      go to state 252
    EmptyStmt       go to state 253
    ExpressionStmt  go to state 254
    IncDecStmt      go to state 255
    Assignment      go to state 256
    ShortVarDecl    go to state 257
    VarDecl         go to state 20
    Declaration     go to state 258
    CompositeLit    go to state 125
    LiteralType     go to state 126
    Operand         go to state 127
    OperandName     go to state 128
    SliceType       go to state 79
    LabeledStmt     go to state 259
    ReturnStmt      go to state 260
    BreakStmt       go to state 261
    ContinueStmt    go to state 262
    IfStmt          go to state 263
    ForStmt         go to state 264
    Expression      go to state 265
    Expression1     go to state 130
    Expression2     go to state 131
    Expression3     go to state 132
    Expression4     go to state 133
    Expression5     go to state 134
    UnaryExpr       go to state 135
    PrimaryExpr     go to state 136
    TypeDecl        go to state 26
    ExpressionList  go to state 266
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    ArrayType       go to state 83
    Literal         go to state 138
    BasicLit        go to state 139
    UnaryOp         go to state 140
    String          go to state 141


State 287

  115 BreakStmt: Key_break Identifier .

    $default  reduce using rule 115 (BreakStmt)


State 288

  117 ContinueStmt: Key_continue Identifier .

    $default  reduce using rule 117 (ContinueStmt)


State 289

  126 ForStmt: Key_for OPENB . SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB
  127        | Key_for OPENB . Expression BrkBlk Block BrkBlkEnd CLOSEB
  129        | Key_for OPENB . SimpleStmt M_semicolon BrkBlk EmptyExpr M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB
  130        | Key_for OPENB . EmptyStmt Empty BrkBlk Expression Empty EmptyStmt Block BrkBlkEnd CLOSEB

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    Identifier     [reduce using rule 23 (EmptyStmt)]
    Op_add         [reduce using rule 23 (EmptyStmt)]
    Key_map        [reduce using rule 23 (EmptyStmt)]
    Key_struct     [reduce using rule 23 (EmptyStmt)]
    Imaginary_lit  [reduce using rule 23 (EmptyStmt)]
    Float_lit      [reduce using rule 23 (EmptyStmt)]
    Int_lit        [reduce using rule 23 (EmptyStmt)]
    String_lit     [reduce using rule 23 (EmptyStmt)]
    Op_sub         [reduce using rule 23 (EmptyStmt)]
    Op_mult        [reduce using rule 23 (EmptyStmt)]
    Op_pow         [reduce using rule 23 (EmptyStmt)]
    Op_unary_and   [reduce using rule 23 (EmptyStmt)]
    Op_unary_not   [reduce using rule 23 (EmptyStmt)]
    M_lparan       [reduce using rule 23 (EmptyStmt)]
    M_lsqbracket   [reduce using rule 23 (EmptyStmt)]
    Bool_true      [reduce using rule 23 (EmptyStmt)]
    Bool_false     [reduce using rule 23 (EmptyStmt)]
    $default       reduce using rule 23 (EmptyStmt)

    SimpleStmt      go to state 317
    EmptyStmt       go to state 318
    ExpressionStmt  go to state 254
    IncDecStmt      go to state 255
    Assignment      go to state 256
    ShortVarDecl    go to state 257
    CompositeLit    go to state 125
    LiteralType     go to state 126
    Operand         go to state 127
    OperandName     go to state 128
    SliceType       go to state 79
    Expression      go to state 319
    Expression1     go to state 130
    Expression2     go to state 131
    Expression3     go to state 132
    Expression4     go to state 133
    Expression5     go to state 134
    UnaryExpr       go to state 135
    PrimaryExpr     go to state 136
    ExpressionList  go to state 266
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    ArrayType       go to state 83
    Literal         go to state 138
    BasicLit        go to state 139
    UnaryOp         go to state 140
    String          go to state 141


State 290

  128 ForStmt: Key_for BrkBlk . Block BrkBlkEnd

    M_lcurly  shift, and go to state 152

    Block  go to state 320


State 291

  118 IfStmt: Key_if OPENB . Expression Block CLOSEB
  119       | Key_if OPENB . SimpleStmt M_semicolon Expression Block CLOSEB
  120       | Key_if OPENB . Expression Block Key_else Block CLOSEB
  121       | Key_if OPENB . Expression Block Key_else IfStmt CLOSEB
  122       | Key_if OPENB . SimpleStmt M_semicolon Expression Block Key_else IfStmt CLOSEB
  123       | Key_if OPENB . SimpleStmt M_semicolon Expression Block Key_else Block CLOSEB

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    $default  reduce using rule 23 (EmptyStmt)

    SimpleStmt      go to state 321
    EmptyStmt       go to state 253
    ExpressionStmt  go to state 254
    IncDecStmt      go to state 255
    Assignment      go to state 256
    ShortVarDecl    go to state 257
    CompositeLit    go to state 125
    LiteralType     go to state 126
    Operand         go to state 127
    OperandName     go to state 128
    SliceType       go to state 79
    Expression      go to state 322
    Expression1     go to state 130
    Expression2     go to state 131
    Expression3     go to state 132
    Expression4     go to state 133
    Expression5     go to state 134
    UnaryExpr       go to state 135
    PrimaryExpr     go to state 136
    ExpressionList  go to state 266
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    ArrayType       go to state 83
    Literal         go to state 138
    BasicLit        go to state 139
    UnaryOp         go to state 140
    String          go to state 141


State 292

  113 ReturnStmt: Key_return ExpressionList .
  186 ExpressionList: ExpressionList . M_comma Expression

    M_comma  shift, and go to state 200

    $default  reduce using rule 113 (ReturnStmt)


State 293

    2 Block: M_lcurly OPENB StatementList CLOSEB . M_rcurly

    M_rcurly  shift, and go to state 323


State 294

    7 StatementList: StatementList Statement . M_semicolon

    M_semicolon  shift, and go to state 324


State 295

    8 StatementList: Statement M_semicolon .

    $default  reduce using rule 8 (StatementList)


State 296

   27 IncDecStmt: Expression Op_add . Op_assign Expression

    Op_assign  shift, and go to state 325


State 297

   25 IncDecStmt: Expression Op_unary_add .

    $default  reduce using rule 25 (IncDecStmt)


State 298

   26 IncDecStmt: Expression Op_unary_sub .

    $default  reduce using rule 26 (IncDecStmt)


State 299

   28 IncDecStmt: Expression Op_sub . Op_assign Expression

    Op_assign  shift, and go to state 326


State 300

   35 ASN_OP: Op_assign .
   36 ShortVarDecl: ExpressionList Op_assign . ExpressionList

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    Identifier     [reduce using rule 35 (ASN_OP)]
    Op_add         [reduce using rule 35 (ASN_OP)]
    Key_map        [reduce using rule 35 (ASN_OP)]
    Key_struct     [reduce using rule 35 (ASN_OP)]
    Imaginary_lit  [reduce using rule 35 (ASN_OP)]
    Float_lit      [reduce using rule 35 (ASN_OP)]
    Int_lit        [reduce using rule 35 (ASN_OP)]
    String_lit     [reduce using rule 35 (ASN_OP)]
    Op_sub         [reduce using rule 35 (ASN_OP)]
    Op_mult        [reduce using rule 35 (ASN_OP)]
    Op_pow         [reduce using rule 35 (ASN_OP)]
    Op_unary_and   [reduce using rule 35 (ASN_OP)]
    Op_unary_not   [reduce using rule 35 (ASN_OP)]
    M_lparan       [reduce using rule 35 (ASN_OP)]
    M_lsqbracket   [reduce using rule 35 (ASN_OP)]
    Bool_true      [reduce using rule 35 (ASN_OP)]
    Bool_false     [reduce using rule 35 (ASN_OP)]

    CompositeLit    go to state 125
    LiteralType     go to state 126
    Operand         go to state 127
    OperandName     go to state 128
    SliceType       go to state 79
    Expression      go to state 147
    Expression1     go to state 130
    Expression2     go to state 131
    Expression3     go to state 132
    Expression4     go to state 133
    Expression5     go to state 134
    UnaryExpr       go to state 135
    PrimaryExpr     go to state 136
    ExpressionList  go to state 327
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    ArrayType       go to state 83
    Literal         go to state 138
    BasicLit        go to state 139
    UnaryOp         go to state 140
    String          go to state 141


State 301

   29 Assignment: ExpressionList ASN_OP . ExpressionList

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit    go to state 125
    LiteralType     go to state 126
    Operand         go to state 127
    OperandName     go to state 128
    SliceType       go to state 79
    Expression      go to state 147
    Expression1     go to state 130
    Expression2     go to state 131
    Expression3     go to state 132
    Expression4     go to state 133
    Expression5     go to state 134
    UnaryExpr       go to state 135
    PrimaryExpr     go to state 136
    ExpressionList  go to state 328
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    ArrayType       go to state 83
    Literal         go to state 138
    BasicLit        go to state 139
    UnaryOp         go to state 140
    String          go to state 141


State 302

   55 TypeList: TypeList M_comma Type .

    $default  reduce using rule 55 (TypeList)


State 303

   98 LiteralValue: M_semicolon ElementList M_comma M_rcurly .

    $default  reduce using rule 98 (LiteralValue)


State 304

  101 ElementList: ElementList M_comma KeyedElement .

    $default  reduce using rule 101 (ElementList)


State 305

  107 Element: LiteralValue .

    $default  reduce using rule 107 (Element)


State 306

  103 KeyedElement: Key M_colon Element .

    $default  reduce using rule 103 (KeyedElement)


State 307

  106 Element: Expression .

    $default  reduce using rule 106 (Element)


State 308

   97 LiteralValue: M_lcurly ElementList M_comma M_rcurly .

    $default  reduce using rule 97 (LiteralValue)


State 309

  168 KeyValList: Expression M_colon Expression .
  169           | Expression M_colon Expression . M_comma KeyValList

    M_comma  shift, and go to state 329

    $default  reduce using rule 168 (KeyValList)


State 310

  183 Arguments: M_lparan ExpressionList DOTS M_rparan .

    $default  reduce using rule 183 (Arguments)


State 311

  176 Slice: M_lsqbracket M_colon Expression M_colon . Expression M_rsqbracket

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression    go to state 330
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 312

  173 Slice: M_lsqbracket M_colon Expression M_rsqbracket .

    $default  reduce using rule 173 (Slice)


State 313

  174 Slice: M_lsqbracket Expression M_colon M_rsqbracket .

    $default  reduce using rule 174 (Slice)


State 314

  175 Slice: M_lsqbracket Expression M_colon Expression . M_rsqbracket
  177      | M_lsqbracket Expression M_colon Expression . M_colon Expression M_rsqbracket

    M_colon       shift, and go to state 331
    M_rsqbracket  shift, and go to state 332


State 315

  180 TypeAssertion: M_dot M_lparan Type M_rparan .

    $default  reduce using rule 180 (TypeAssertion)


State 316

  111 LabeledStmt: Identifier M_colon Statement .

    $default  reduce using rule 111 (LabeledStmt)


State 317

  126 ForStmt: Key_for OPENB SimpleStmt . M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB
  129        | Key_for OPENB SimpleStmt . M_semicolon BrkBlk EmptyExpr M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB

    M_semicolon  shift, and go to state 333


State 318

   18 SimpleStmt: EmptyStmt .
  130 ForStmt: Key_for OPENB EmptyStmt . Empty BrkBlk Expression Empty EmptyStmt Block BrkBlkEnd CLOSEB

    M_semicolon  reduce using rule 18 (SimpleStmt)
    $default     reduce using rule 125 (Empty)

    Empty  go to state 334


State 319

   24 ExpressionStmt: Expression .
   25 IncDecStmt: Expression . Op_unary_add
   26           | Expression . Op_unary_sub
   27           | Expression . Op_add Op_assign Expression
   28           | Expression . Op_sub Op_assign Expression
  127 ForStmt: Key_for OPENB Expression . BrkBlk Block BrkBlkEnd CLOSEB
  185 ExpressionList: Expression .

    Op_add        shift, and go to state 296
    Op_unary_add  shift, and go to state 297
    Op_unary_sub  shift, and go to state 298
    Op_sub        shift, and go to state 299

    Op_add       [reduce using rule 185 (ExpressionList)]
    Op_sub       [reduce using rule 185 (ExpressionList)]
    M_semicolon  reduce using rule 24 (ExpressionStmt)
    M_lcurly     reduce using rule 5 (BrkBlk)
    $default     reduce using rule 185 (ExpressionList)

    BrkBlk  go to state 335


State 320

  128 ForStmt: Key_for BrkBlk Block . BrkBlkEnd

    $default  reduce using rule 6 (BrkBlkEnd)

    BrkBlkEnd  go to state 336


State 321

  119 IfStmt: Key_if OPENB SimpleStmt . M_semicolon Expression Block CLOSEB
  122       | Key_if OPENB SimpleStmt . M_semicolon Expression Block Key_else IfStmt CLOSEB
  123       | Key_if OPENB SimpleStmt . M_semicolon Expression Block Key_else Block CLOSEB

    M_semicolon  shift, and go to state 337


State 322

   24 ExpressionStmt: Expression .
   25 IncDecStmt: Expression . Op_unary_add
   26           | Expression . Op_unary_sub
   27           | Expression . Op_add Op_assign Expression
   28           | Expression . Op_sub Op_assign Expression
  118 IfStmt: Key_if OPENB Expression . Block CLOSEB
  120       | Key_if OPENB Expression . Block Key_else Block CLOSEB
  121       | Key_if OPENB Expression . Block Key_else IfStmt CLOSEB
  185 ExpressionList: Expression .

    Op_add        shift, and go to state 296
    Op_unary_add  shift, and go to state 297
    Op_unary_sub  shift, and go to state 298
    Op_sub        shift, and go to state 299
    M_lcurly      shift, and go to state 152

    Op_add       [reduce using rule 185 (ExpressionList)]
    Op_sub       [reduce using rule 185 (ExpressionList)]
    M_semicolon  reduce using rule 24 (ExpressionStmt)
    $default     reduce using rule 185 (ExpressionList)

    Block  go to state 338


State 323

    2 Block: M_lcurly OPENB StatementList CLOSEB M_rcurly .

    $default  reduce using rule 2 (Block)


State 324

    7 StatementList: StatementList Statement M_semicolon .

    $default  reduce using rule 7 (StatementList)


State 325

   27 IncDecStmt: Expression Op_add Op_assign . Expression

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression    go to state 339
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 326

   28 IncDecStmt: Expression Op_sub Op_assign . Expression

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression    go to state 340
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 327

   36 ShortVarDecl: ExpressionList Op_assign ExpressionList .
  186 ExpressionList: ExpressionList . M_comma Expression

    M_comma  shift, and go to state 200

    $default  reduce using rule 36 (ShortVarDecl)


State 328

   29 Assignment: ExpressionList ASN_OP ExpressionList .
  186 ExpressionList: ExpressionList . M_comma Expression

    M_comma  shift, and go to state 200

    $default  reduce using rule 29 (Assignment)


State 329

  169 KeyValList: Expression M_colon Expression M_comma . KeyValList

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    $default  reduce using rule 167 (KeyValList)

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression    go to state 223
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    KeyValList    go to state 341
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 330

  176 Slice: M_lsqbracket M_colon Expression M_colon Expression . M_rsqbracket

    M_rsqbracket  shift, and go to state 342


State 331

  177 Slice: M_lsqbracket Expression M_colon Expression M_colon . Expression M_rsqbracket

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression    go to state 343
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 332

  175 Slice: M_lsqbracket Expression M_colon Expression M_rsqbracket .

    $default  reduce using rule 175 (Slice)


State 333

  126 ForStmt: Key_for OPENB SimpleStmt M_semicolon . BrkBlk ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB
  129        | Key_for OPENB SimpleStmt M_semicolon . BrkBlk EmptyExpr M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB

    $default  reduce using rule 5 (BrkBlk)

    BrkBlk  go to state 344


State 334

  130 ForStmt: Key_for OPENB EmptyStmt Empty . BrkBlk Expression Empty EmptyStmt Block BrkBlkEnd CLOSEB

    $default  reduce using rule 5 (BrkBlk)

    BrkBlk  go to state 345


State 335

  127 ForStmt: Key_for OPENB Expression BrkBlk . Block BrkBlkEnd CLOSEB

    M_lcurly  shift, and go to state 152

    Block  go to state 346


State 336

  128 ForStmt: Key_for BrkBlk Block BrkBlkEnd .

    $default  reduce using rule 128 (ForStmt)


State 337

  119 IfStmt: Key_if OPENB SimpleStmt M_semicolon . Expression Block CLOSEB
  122       | Key_if OPENB SimpleStmt M_semicolon . Expression Block Key_else IfStmt CLOSEB
  123       | Key_if OPENB SimpleStmt M_semicolon . Expression Block Key_else Block CLOSEB

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression    go to state 347
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 338

  118 IfStmt: Key_if OPENB Expression Block . CLOSEB
  120       | Key_if OPENB Expression Block . Key_else Block CLOSEB
  121       | Key_if OPENB Expression Block . Key_else IfStmt CLOSEB

    Key_else  shift, and go to state 348

    $default  reduce using rule 4 (CLOSEB)

    CLOSEB  go to state 349


State 339

   27 IncDecStmt: Expression Op_add Op_assign Expression .

    $default  reduce using rule 27 (IncDecStmt)


State 340

   28 IncDecStmt: Expression Op_sub Op_assign Expression .

    $default  reduce using rule 28 (IncDecStmt)


State 341

  169 KeyValList: Expression M_colon Expression M_comma KeyValList .

    $default  reduce using rule 169 (KeyValList)


State 342

  176 Slice: M_lsqbracket M_colon Expression M_colon Expression M_rsqbracket .

    $default  reduce using rule 176 (Slice)


State 343

  177 Slice: M_lsqbracket Expression M_colon Expression M_colon Expression . M_rsqbracket

    M_rsqbracket  shift, and go to state 350


State 344

  126 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk . ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB
  129        | Key_for OPENB SimpleStmt M_semicolon BrkBlk . EmptyExpr M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    $default  reduce using rule 124 (EmptyExpr)

    ExpressionStmt  go to state 351
    CompositeLit    go to state 125
    LiteralType     go to state 126
    Operand         go to state 127
    OperandName     go to state 128
    SliceType       go to state 79
    EmptyExpr       go to state 352
    Expression      go to state 353
    Expression1     go to state 130
    Expression2     go to state 131
    Expression3     go to state 132
    Expression4     go to state 133
    Expression5     go to state 134
    UnaryExpr       go to state 135
    PrimaryExpr     go to state 136
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    ArrayType       go to state 83
    Literal         go to state 138
    BasicLit        go to state 139
    UnaryOp         go to state 140
    String          go to state 141


State 345

  130 ForStmt: Key_for OPENB EmptyStmt Empty BrkBlk . Expression Empty EmptyStmt Block BrkBlkEnd CLOSEB

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    CompositeLit  go to state 125
    LiteralType   go to state 126
    Operand       go to state 127
    OperandName   go to state 128
    SliceType     go to state 79
    Expression    go to state 354
    Expression1   go to state 130
    Expression2   go to state 131
    Expression3   go to state 132
    Expression4   go to state 133
    Expression5   go to state 134
    UnaryExpr     go to state 135
    PrimaryExpr   go to state 136
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    ArrayType     go to state 83
    Literal       go to state 138
    BasicLit      go to state 139
    UnaryOp       go to state 140
    String        go to state 141


State 346

  127 ForStmt: Key_for OPENB Expression BrkBlk Block . BrkBlkEnd CLOSEB

    $default  reduce using rule 6 (BrkBlkEnd)

    BrkBlkEnd  go to state 355


State 347

  119 IfStmt: Key_if OPENB SimpleStmt M_semicolon Expression . Block CLOSEB
  122       | Key_if OPENB SimpleStmt M_semicolon Expression . Block Key_else IfStmt CLOSEB
  123       | Key_if OPENB SimpleStmt M_semicolon Expression . Block Key_else Block CLOSEB

    M_lcurly  shift, and go to state 152

    Block  go to state 356


State 348

  120 IfStmt: Key_if OPENB Expression Block Key_else . Block CLOSEB
  121       | Key_if OPENB Expression Block Key_else . IfStmt CLOSEB

    Key_if    shift, and go to state 247
    M_lcurly  shift, and go to state 152

    Block   go to state 357
    IfStmt  go to state 358


State 349

  118 IfStmt: Key_if OPENB Expression Block CLOSEB .

    $default  reduce using rule 118 (IfStmt)


State 350

  177 Slice: M_lsqbracket Expression M_colon Expression M_colon Expression M_rsqbracket .

    $default  reduce using rule 177 (Slice)


State 351

  126 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt . M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB

    M_semicolon  shift, and go to state 359


State 352

  129 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk EmptyExpr . M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB

    M_semicolon  shift, and go to state 360


State 353

   24 ExpressionStmt: Expression .

    $default  reduce using rule 24 (ExpressionStmt)


State 354

  130 ForStmt: Key_for OPENB EmptyStmt Empty BrkBlk Expression . Empty EmptyStmt Block BrkBlkEnd CLOSEB

    $default  reduce using rule 125 (Empty)

    Empty  go to state 361


State 355

  127 ForStmt: Key_for OPENB Expression BrkBlk Block BrkBlkEnd . CLOSEB

    $default  reduce using rule 4 (CLOSEB)

    CLOSEB  go to state 362


State 356

  119 IfStmt: Key_if OPENB SimpleStmt M_semicolon Expression Block . CLOSEB
  122       | Key_if OPENB SimpleStmt M_semicolon Expression Block . Key_else IfStmt CLOSEB
  123       | Key_if OPENB SimpleStmt M_semicolon Expression Block . Key_else Block CLOSEB

    Key_else  shift, and go to state 363

    $default  reduce using rule 4 (CLOSEB)

    CLOSEB  go to state 364


State 357

  120 IfStmt: Key_if OPENB Expression Block Key_else Block . CLOSEB

    $default  reduce using rule 4 (CLOSEB)

    CLOSEB  go to state 365


State 358

  121 IfStmt: Key_if OPENB Expression Block Key_else IfStmt . CLOSEB

    $default  reduce using rule 4 (CLOSEB)

    CLOSEB  go to state 366


State 359

  126 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon . SimpleStmt Block BrkBlkEnd CLOSEB

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    $default  reduce using rule 23 (EmptyStmt)

    SimpleStmt      go to state 367
    EmptyStmt       go to state 253
    ExpressionStmt  go to state 254
    IncDecStmt      go to state 255
    Assignment      go to state 256
    ShortVarDecl    go to state 257
    CompositeLit    go to state 125
    LiteralType     go to state 126
    Operand         go to state 127
    OperandName     go to state 128
    SliceType       go to state 79
    Expression      go to state 265
    Expression1     go to state 130
    Expression2     go to state 131
    Expression3     go to state 132
    Expression4     go to state 133
    Expression5     go to state 134
    UnaryExpr       go to state 135
    PrimaryExpr     go to state 136
    ExpressionList  go to state 266
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    ArrayType       go to state 83
    Literal         go to state 138
    BasicLit        go to state 139
    UnaryOp         go to state 140
    String          go to state 141


State 360

  129 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk EmptyExpr M_semicolon . SimpleStmt Block BrkBlkEnd CLOSEB

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 123
    Bool_false     shift, and go to state 124

    $default  reduce using rule 23 (EmptyStmt)

    SimpleStmt      go to state 368
    EmptyStmt       go to state 253
    ExpressionStmt  go to state 254
    IncDecStmt      go to state 255
    Assignment      go to state 256
    ShortVarDecl    go to state 257
    CompositeLit    go to state 125
    LiteralType     go to state 126
    Operand         go to state 127
    OperandName     go to state 128
    SliceType       go to state 79
    Expression      go to state 265
    Expression1     go to state 130
    Expression2     go to state 131
    Expression3     go to state 132
    Expression4     go to state 133
    Expression5     go to state 134
    UnaryExpr       go to state 135
    PrimaryExpr     go to state 136
    ExpressionList  go to state 266
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    ArrayType       go to state 83
    Literal         go to state 138
    BasicLit        go to state 139
    UnaryOp         go to state 140
    String          go to state 141


State 361

  130 ForStmt: Key_for OPENB EmptyStmt Empty BrkBlk Expression Empty . EmptyStmt Block BrkBlkEnd CLOSEB

    $default  reduce using rule 23 (EmptyStmt)

    EmptyStmt  go to state 369


State 362

  127 ForStmt: Key_for OPENB Expression BrkBlk Block BrkBlkEnd CLOSEB .

    $default  reduce using rule 127 (ForStmt)


State 363

  122 IfStmt: Key_if OPENB SimpleStmt M_semicolon Expression Block Key_else . IfStmt CLOSEB
  123       | Key_if OPENB SimpleStmt M_semicolon Expression Block Key_else . Block CLOSEB

    Key_if    shift, and go to state 247
    M_lcurly  shift, and go to state 152

    Block   go to state 370
    IfStmt  go to state 371


State 364

  119 IfStmt: Key_if OPENB SimpleStmt M_semicolon Expression Block CLOSEB .

    $default  reduce using rule 119 (IfStmt)


State 365

  120 IfStmt: Key_if OPENB Expression Block Key_else Block CLOSEB .

    $default  reduce using rule 120 (IfStmt)


State 366

  121 IfStmt: Key_if OPENB Expression Block Key_else IfStmt CLOSEB .

    $default  reduce using rule 121 (IfStmt)


State 367

  126 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt . Block BrkBlkEnd CLOSEB

    M_lcurly  shift, and go to state 152

    Block  go to state 372


State 368

  129 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk EmptyExpr M_semicolon SimpleStmt . Block BrkBlkEnd CLOSEB

    M_lcurly  shift, and go to state 152

    Block  go to state 373


State 369

  130 ForStmt: Key_for OPENB EmptyStmt Empty BrkBlk Expression Empty EmptyStmt . Block BrkBlkEnd CLOSEB

    M_lcurly  shift, and go to state 152

    Block  go to state 374


State 370

  123 IfStmt: Key_if OPENB SimpleStmt M_semicolon Expression Block Key_else Block . CLOSEB

    $default  reduce using rule 4 (CLOSEB)

    CLOSEB  go to state 375


State 371

  122 IfStmt: Key_if OPENB SimpleStmt M_semicolon Expression Block Key_else IfStmt . CLOSEB

    $default  reduce using rule 4 (CLOSEB)

    CLOSEB  go to state 376


State 372

  126 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt Block . BrkBlkEnd CLOSEB

    $default  reduce using rule 6 (BrkBlkEnd)

    BrkBlkEnd  go to state 377


State 373

  129 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk EmptyExpr M_semicolon SimpleStmt Block . BrkBlkEnd CLOSEB

    $default  reduce using rule 6 (BrkBlkEnd)

    BrkBlkEnd  go to state 378


State 374

  130 ForStmt: Key_for OPENB EmptyStmt Empty BrkBlk Expression Empty EmptyStmt Block . BrkBlkEnd CLOSEB

    $default  reduce using rule 6 (BrkBlkEnd)

    BrkBlkEnd  go to state 379


State 375

  123 IfStmt: Key_if OPENB SimpleStmt M_semicolon Expression Block Key_else Block CLOSEB .

    $default  reduce using rule 123 (IfStmt)


State 376

  122 IfStmt: Key_if OPENB SimpleStmt M_semicolon Expression Block Key_else IfStmt CLOSEB .

    $default  reduce using rule 122 (IfStmt)


State 377

  126 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd . CLOSEB

    $default  reduce using rule 4 (CLOSEB)

    CLOSEB  go to state 380


State 378

  129 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk EmptyExpr M_semicolon SimpleStmt Block BrkBlkEnd . CLOSEB

    $default  reduce using rule 4 (CLOSEB)

    CLOSEB  go to state 381


State 379

  130 ForStmt: Key_for OPENB EmptyStmt Empty BrkBlk Expression Empty EmptyStmt Block BrkBlkEnd . CLOSEB

    $default  reduce using rule 4 (CLOSEB)

    CLOSEB  go to state 382


State 380

  126 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB .

    $default  reduce using rule 126 (ForStmt)


State 381

  129 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk EmptyExpr M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB .

    $default  reduce using rule 129 (ForStmt)


State 382

  130 ForStmt: Key_for OPENB EmptyStmt Empty BrkBlk Expression Empty EmptyStmt Block BrkBlkEnd CLOSEB .

    $default  reduce using rule 130 (ForStmt)
