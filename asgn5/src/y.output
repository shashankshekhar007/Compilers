Terminals unused in grammar

   Single_line_comment
   Multi_line_comment
   Key_case
   Key_const
   Key_default
   Key_fallthrough
   Key_interface
   Key_range
   Key_select
   Key_switch
   Key_class
   Key_private
   Key_protected
   Key_public
   Key_static
   Key_try
   Key_catch
   Key_finally
   M_question
   M_doublequotes
   M_singlequotes
   M_underscore


State 6 conflicts: 1 shift/reduce
State 12 conflicts: 3 shift/reduce
State 116 conflicts: 5 shift/reduce
State 126 conflicts: 1 shift/reduce
State 134 conflicts: 1 shift/reduce
State 191 conflicts: 1 shift/reduce
State 226 conflicts: 1 shift/reduce


Grammar

    0 $accept: SourceFile $end

    1 SourceFile: PackageClause M_semicolon ImportDeclList TopLevelDeclList

    2 Block: M_lcurly OPENB StatementList CLOSEB M_rcurly

    3 OPENB: %empty

    4 CLOSEB: %empty

    5 BrkBlk: %empty

    6 BrkBlkEnd: %empty

    7 StatementList: StatementList Statement M_semicolon
    8              | Statement M_semicolon

    9 Statement: Declaration
   10          | LabeledStmt
   11          | SimpleStmt
   12          | ReturnStmt
   13          | BreakStmt
   14          | ContinueStmt
   15          | Block
   16          | if_stmt
   17          | ForStmt

   18 SimpleStmt: EmptyStmt
   19           | ExpressionStmt
   20           | IncDecStmt
   21           | Assignment
   22           | ShortVarDecl

   23 EmptyStmt: %empty

   24 ExpressionStmt: Expression

   25 IncDecStmt: Expression Op_unary_add
   26           | Expression Op_unary_sub

   27 Assignment: ExpressionList ASN_OP ExpressionList

   28 ASN_OP: Op_AddAssign
   29       | Op_SubAssign
   30       | Op_unary_or_assign
   31       | Op_unary_and_assign
   32       | Op_MultAssign
   33       | Op_DivAssign
   34       | Op_ModAssign

   35 ShortVarDecl: ExpressionList Op_assign ExpressionList
   36             | ArrayList Op_assign ExpressionList
   37             | ExpressionList Op_assign ArrayList

   38 VarDecl: Key_var VarSpec

   39 VarSpec: IdentifierList Type
   40        | IdentifierList ArrayType
   41        | IdentifierList Type ASN_OP ExpressionList
   42        | IdentifierList ASN_OP ExpressionList

   43 Declaration: TypeDecl
   44            | VarDecl

   45 $@1: %empty

   46 FunctionDecl: Key_func Identifier $@1 OPENB Signature Block CLOSEB

   47 Signature: Parameters
   48          | Parameters Result

   49 Result: M_lparan TypeList M_rparan
   50       | Type

   51 Parameters: M_lparan M_rparan
   52           | M_lparan ParameterList M_rparan
   53           | M_lparan ParameterList M_comma M_rparan

   54 ParameterList: ParameterDecl
   55              | ParameterList M_comma ParameterDecl

   56 ParameterDecl: IdentifierList Type

   57 TypeList: TypeList M_comma Type
   58         | Type

   59 IdentifierList: Identifier
   60               | IdentifierList M_comma Identifier

   61 MethodDecl: Key_func Receiver Identifier Signature

   62 Receiver: Parameters

   63 TopLevelDeclList: TopLevelDeclList TopLevelDecl M_semicolon
   64                 | TopLevelDecl M_semicolon

   65 CompositeLit: LiteralType LiteralValue

   66 LiteralType: StructType
   67            | PointerType
   68            | M_lsqbracket DOTS M_rsqbracket Operand
   69            | SliceType
   70            | MapType

   71 VarType: T_int16
   72        | T_int8
   73        | T_int32
   74        | T_int64
   75        | T_int
   76        | T_bool
   77        | T_string
   78        | T_uint
   79        | T_uint16
   80        | T_uint32
   81        | T_uint64
   82        | T_uintptr
   83        | T_float32
   84        | T_float64
   85        | T_complex64
   86        | T_complex128

   87 Type: LiteralType
   88     | OperandName
   89     | VarType

   90 Operand: Literal
   91        | OperandName
   92        | M_lparan Expression M_rparan

   93 OperandName: Identifier

   94 LiteralValue: M_lcurly M_rcurly
   95             | M_semicolon M_rcurly
   96             | M_lcurly ElementList M_rcurly
   97             | M_semicolon ElementList M_rcurly
   98             | M_lcurly ElementList M_comma M_rcurly
   99             | M_semicolon ElementList M_comma M_rcurly

  100 SliceType: M_lsqbracket M_rsqbracket Type

  101 ElementList: KeyedElement
  102            | ElementList M_comma KeyedElement

  103 KeyedElement: Element
  104             | Key M_colon Element

  105 Key: Expression
  106    | LiteralValue

  107 Element: Expression
  108        | LiteralValue

  109 TopLevelDecl: Declaration
  110             | FunctionDecl
  111             | MethodDecl

  112 LabeledStmt: Identifier M_colon Statement

  113 ReturnStmt: Key_return
  114           | Key_return ExpressionList

  115 BreakStmt: Key_break
  116          | Key_break Identifier

  117 ContinueStmt: Key_continue
  118             | Key_continue Identifier

  119 if_stmt: Key_if Expression OPENB Block elif_test_suite
  120        | Key_if Expression OPENB Block elif_test_suite Key_else CLOSEB Block

  121 elif_test_suite: %empty
  122                | elif_test_suite Key_elif Expression OPENB Block

  123 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB

  124 Expression: Expression1

  125 Expression1: Expression1 Op_relational_or Expression2
  126            | Expression2

  127 Expression2: Expression2 Op_relational_and Expression3
  128            | Expression3

  129 Expression3: Expression3 REL_OP Expression4
  130            | Expression4

  131 Expression4: Expression4 Op_unary_or Expression5
  132            | Expression4 Op_add Expression5
  133            | Expression4 Op_sub Expression5
  134            | Expression5

  135 Expression5: Expression5 MUL_OP PrimaryExpr
  136            | UnaryExpr

  137 REL_OP: Op_equality
  138       | Op_not_equal
  139       | Op_less
  140       | Op_greater
  141       | Op_greater_eq
  142       | Op_less_eq

  143 MUL_OP: Op_mult
  144       | Op_divide
  145       | Op_mod
  146       | Op_less_less
  147       | Op_greater_greater
  148       | Op_unary_and

  149 UnaryExpr: PrimaryExpr
  150          | UnaryOp PrimaryExpr

  151 PrimaryExpr: Operand
  152            | PrimaryExpr Selector
  153            | PrimaryExpr Slice
  154            | PrimaryExpr TypeAssertion
  155            | PrimaryExpr Arguments
  156            | OperandName StructLiteral

  157 PrimaryExpr2: PrimaryExpr Index

  158 StructLiteral: M_lcurly KeyValList M_rcurly

  159 KeyValList: %empty
  160           | Expression M_colon Expression
  161           | Expression M_colon Expression M_comma KeyValList

  162 Selector: M_dot Identifier

  163 Index: M_lsqbracket Expression M_rsqbracket

  164 Slice: M_lsqbracket M_colon M_rsqbracket
  165      | M_lsqbracket M_colon Expression M_rsqbracket
  166      | M_lsqbracket Expression M_colon M_rsqbracket
  167      | M_lsqbracket Expression M_colon Expression M_rsqbracket
  168      | M_lsqbracket M_colon Expression M_colon Expression M_rsqbracket
  169      | M_lsqbracket Expression M_colon Expression M_colon Expression M_rsqbracket

  170 TypeDecl: Key_type TypeSpec

  171 TypeSpec: Identifier Type

  172 TypeAssertion: M_dot M_lparan Type M_rparan

  173 Arguments: M_lparan M_rparan
  174          | M_lparan ExpressionList M_rparan
  175          | M_lparan ExpressionList DOTS M_rparan

  176 DOTS: M_dot M_dot M_dot

  177 ExpressionList: Expression
  178               | ExpressionList M_comma Expression

  179 ArrayList: PrimaryExpr2

  180 MapType: Key_map M_lsqbracket Type M_rsqbracket Type

  181 StructType: Key_struct M_lcurly FieldDeclList M_rcurly
  182           | Key_struct M_semicolon FieldDeclList M_rcurly
  183           | Key_struct M_lcurly M_rcurly
  184           | Key_struct M_semicolon M_rcurly

  185 FieldDeclList: FieldDecl M_semicolon
  186              | FieldDeclList FieldDecl M_semicolon

  187 FieldDecl: IdentifierList Type String
  188          | IdentifierList Type

  189 PointerType: Op_mult Type

  190 ArrayType: M_lsqbracket Expression M_rsqbracket Type

  191 Literal: BasicLit
  192        | CompositeLit

  193 BasicLit: Int_lit
  194         | Float_lit
  195         | String
  196         | Bool_true
  197         | Bool_false
  198         | Imaginary_lit

  199 UnaryOp: Op_add
  200        | Op_sub
  201        | Op_unary_not
  202        | Op_pow
  203        | Op_mult
  204        | Op_unary_and

  205 String: String_lit

  206 PackageClause: Key_package Identifier

  207 ImportDeclList: %empty
  208               | ImportDeclList ImportDecl M_semicolon
  209               | ImportDecl M_semicolon

  210 ImportDecl: Key_import M_lparan ImportSpecList M_rparan
  211           | Key_import ImportSpec

  212 ImportSpecList: %empty
  213               | ImportSpecList ImportSpec M_semicolon
  214               | ImportSpec M_semicolon

  215 ImportSpec: Identifier ImportPath
  216           | M_dot ImportPath
  217           | ImportPath

  218 ImportPath: String


Terminals, with rules where they appear

$end (0) 0
error (256)
T_int64 (258) 74
Identifier (259) 46 59 60 61 93 112 116 118 162 171 206 215
T_string (260) 77
Op_add (261) 132 199
Single_line_comment (262)
Multi_line_comment (263)
T_bool (264) 76
T_int (265) 75
T_int8 (266) 72
T_int16 (267) 71
T_int32 (268) 73
T_uint (269) 78
T_uint16 (270) 79
T_uint32 (271) 80
T_uint64 (272) 81
T_uintptr (273) 82
T_float32 (274) 83
T_float64 (275) 84
T_complex64 (276) 85
T_complex128 (277) 86
Key_break (278) 115 116
Key_case (279)
Key_const (280)
Key_continue (281) 117 118
Key_default (282)
Key_else (283) 120
Key_fallthrough (284)
Key_for (285) 123
Key_func (286) 46 61
Key_if (287) 119 120
Key_elif (288) 122
Key_import (289) 210 211
Key_interface (290)
Key_map (291) 180
Key_package (292) 206
Key_range (293)
Key_return (294) 113 114
Key_select (295)
Key_struct (296) 181 182 183 184
Key_switch (297)
Key_type (298) 170
Key_var (299) 38
Key_class (300)
Key_private (301)
Key_protected (302)
Key_public (303)
Key_static (304)
Key_try (305)
Key_catch (306)
Key_finally (307)
Imaginary_lit (308) 198
Float_lit (309) 194
Int_lit (310) 193
String_lit (311) 205
Op_AddAssign (312) 28
Op_SubAssign (313) 29
Op_MultAssign (314) 32
Op_DivAssign (315) 33
Op_ModAssign (316) 34
Op_unary_or_assign (317) 30
Op_unary_and_assign (318) 31
Op_greater_greater (319) 147
Op_less_less (320) 146
Op_greater (321) 140
Op_less (322) 139
Op_greater_eq (323) 141
Op_less_eq (324) 142
Op_not_equal (325) 138
Op_equality (326) 137
Op_assign (327) 35 36 37
Op_unary_add (328) 25
Op_unary_sub (329) 26
Op_sub (330) 133 200
Op_mult (331) 143 189 203
Op_divide (332) 144
Op_mod (333) 145
Op_pow (334) 202
Op_relational_and (335) 127
Op_relational_or (336) 125
Op_unary_and (337) 148 204
Op_unary_or (338) 131
Op_unary_not (339) 201
M_question (340)
M_semicolon (341) 1 7 8 63 64 95 97 99 123 182 184 185 186 208 209
    213 214
M_colon (342) 104 112 160 161 164 165 166 167 168 169
M_comma (343) 53 55 57 60 98 99 102 161 178
M_lcurly (344) 2 94 96 98 158 181 183
M_rcurly (345) 2 94 95 96 97 98 99 158 181 182 183 184
M_lparan (346) 49 51 52 53 92 172 173 174 175 210
M_rparan (347) 49 51 52 53 92 172 173 174 175 210
M_lsqbracket (348) 68 100 163 164 165 166 167 168 169 180 190
M_rsqbracket (349) 68 100 163 164 165 166 167 168 169 180 190
M_dot (350) 162 172 176 216
M_doublequotes (351)
M_singlequotes (352)
M_underscore (353)
Bool_true (354) 196
Bool_false (355) 197


Nonterminals, with rules where they appear

$accept (101)
    on left: 0
SourceFile (102)
    on left: 1, on right: 0
Block (103)
    on left: 2, on right: 15 46 119 120 122 123
OPENB (104)
    on left: 3, on right: 2 46 119 120 122 123
CLOSEB (105)
    on left: 4, on right: 2 46 120 123
BrkBlk (106)
    on left: 5, on right: 123
BrkBlkEnd (107)
    on left: 6, on right: 123
StatementList (108)
    on left: 7 8, on right: 2 7
Statement (109)
    on left: 9 10 11 12 13 14 15 16 17, on right: 7 8 112
SimpleStmt (110)
    on left: 18 19 20 21 22, on right: 11 123
EmptyStmt (111)
    on left: 23, on right: 18
ExpressionStmt (112)
    on left: 24, on right: 19 123
IncDecStmt (113)
    on left: 25 26, on right: 20
Assignment (114)
    on left: 27, on right: 21
ASN_OP (115)
    on left: 28 29 30 31 32 33 34, on right: 27 41 42
ShortVarDecl (116)
    on left: 35 36 37, on right: 22
VarDecl (117)
    on left: 38, on right: 44
VarSpec (118)
    on left: 39 40 41 42, on right: 38
Declaration (119)
    on left: 43 44, on right: 9 109
FunctionDecl (120)
    on left: 46, on right: 110
$@1 (121)
    on left: 45, on right: 46
Signature (122)
    on left: 47 48, on right: 46 61
Result (123)
    on left: 49 50, on right: 48
Parameters (124)
    on left: 51 52 53, on right: 47 48 62
ParameterList (125)
    on left: 54 55, on right: 52 53 55
ParameterDecl (126)
    on left: 56, on right: 54 55
TypeList (127)
    on left: 57 58, on right: 49 57
IdentifierList (128)
    on left: 59 60, on right: 39 40 41 42 56 60 187 188
MethodDecl (129)
    on left: 61, on right: 111
Receiver (130)
    on left: 62, on right: 61
TopLevelDeclList (131)
    on left: 63 64, on right: 1 63
CompositeLit (132)
    on left: 65, on right: 192
LiteralType (133)
    on left: 66 67 68 69 70, on right: 65 87
VarType (134)
    on left: 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86, on right:
    89
Type (135)
    on left: 87 88 89, on right: 39 41 50 56 57 58 100 171 172 180
    187 188 189 190
Operand (136)
    on left: 90 91 92, on right: 68 151
OperandName (137)
    on left: 93, on right: 88 91 156
LiteralValue (138)
    on left: 94 95 96 97 98 99, on right: 65 106 108
SliceType (139)
    on left: 100, on right: 69
ElementList (140)
    on left: 101 102, on right: 96 97 98 99 102
KeyedElement (141)
    on left: 103 104, on right: 101 102
Key (142)
    on left: 105 106, on right: 104
Element (143)
    on left: 107 108, on right: 103 104
TopLevelDecl (144)
    on left: 109 110 111, on right: 63 64
LabeledStmt (145)
    on left: 112, on right: 10
ReturnStmt (146)
    on left: 113 114, on right: 12
BreakStmt (147)
    on left: 115 116, on right: 13
ContinueStmt (148)
    on left: 117 118, on right: 14
if_stmt (149)
    on left: 119 120, on right: 16
elif_test_suite (150)
    on left: 121 122, on right: 119 120 122
ForStmt (151)
    on left: 123, on right: 17
Expression (152)
    on left: 124, on right: 24 25 26 92 105 107 119 120 122 160 161
    163 165 166 167 168 169 177 178 190
Expression1 (153)
    on left: 125 126, on right: 124 125
Expression2 (154)
    on left: 127 128, on right: 125 126 127
Expression3 (155)
    on left: 129 130, on right: 127 128 129
Expression4 (156)
    on left: 131 132 133 134, on right: 129 130 131 132 133
Expression5 (157)
    on left: 135 136, on right: 131 132 133 134 135
REL_OP (158)
    on left: 137 138 139 140 141 142, on right: 129
MUL_OP (159)
    on left: 143 144 145 146 147 148, on right: 135
UnaryExpr (160)
    on left: 149 150, on right: 136
PrimaryExpr (161)
    on left: 151 152 153 154 155 156, on right: 135 149 150 152 153
    154 155 157
PrimaryExpr2 (162)
    on left: 157, on right: 179
StructLiteral (163)
    on left: 158, on right: 156
KeyValList (164)
    on left: 159 160 161, on right: 158 161
Selector (165)
    on left: 162, on right: 152
Index (166)
    on left: 163, on right: 157
Slice (167)
    on left: 164 165 166 167 168 169, on right: 153
TypeDecl (168)
    on left: 170, on right: 43
TypeSpec (169)
    on left: 171, on right: 170
TypeAssertion (170)
    on left: 172, on right: 154
Arguments (171)
    on left: 173 174 175, on right: 155
DOTS (172)
    on left: 176, on right: 68 175
ExpressionList (173)
    on left: 177 178, on right: 27 35 36 37 41 42 114 174 175 178
ArrayList (174)
    on left: 179, on right: 36 37
MapType (175)
    on left: 180, on right: 70
StructType (176)
    on left: 181 182 183 184, on right: 66
FieldDeclList (177)
    on left: 185 186, on right: 181 182 186
FieldDecl (178)
    on left: 187 188, on right: 185 186
PointerType (179)
    on left: 189, on right: 67
ArrayType (180)
    on left: 190, on right: 40
Literal (181)
    on left: 191 192, on right: 90
BasicLit (182)
    on left: 193 194 195 196 197 198, on right: 191
UnaryOp (183)
    on left: 199 200 201 202 203 204, on right: 150
String (184)
    on left: 205, on right: 187 195 218
PackageClause (185)
    on left: 206, on right: 1
ImportDeclList (186)
    on left: 207 208 209, on right: 1 208
ImportDecl (187)
    on left: 210 211, on right: 208 209
ImportSpecList (188)
    on left: 212 213 214, on right: 210 213
ImportSpec (189)
    on left: 215 216 217, on right: 211 213 214
ImportPath (190)
    on left: 218, on right: 215 216 217


State 0

    0 $accept: . SourceFile $end

    Key_package  shift, and go to state 1

    SourceFile     go to state 2
    PackageClause  go to state 3


State 1

  206 PackageClause: Key_package . Identifier

    Identifier  shift, and go to state 4


State 2

    0 $accept: SourceFile . $end

    $end  shift, and go to state 5


State 3

    1 SourceFile: PackageClause . M_semicolon ImportDeclList TopLevelDeclList

    M_semicolon  shift, and go to state 6


State 4

  206 PackageClause: Key_package Identifier .

    $default  reduce using rule 206 (PackageClause)


State 5

    0 $accept: SourceFile $end .

    $default  accept


State 6

    1 SourceFile: PackageClause M_semicolon . ImportDeclList TopLevelDeclList

    Key_import  shift, and go to state 7

    Key_import  [reduce using rule 207 (ImportDeclList)]
    $default    reduce using rule 207 (ImportDeclList)

    ImportDeclList  go to state 8
    ImportDecl      go to state 9


State 7

  210 ImportDecl: Key_import . M_lparan ImportSpecList M_rparan
  211           | Key_import . ImportSpec

    Identifier  shift, and go to state 10
    String_lit  shift, and go to state 11
    M_lparan    shift, and go to state 12
    M_dot       shift, and go to state 13

    String      go to state 14
    ImportSpec  go to state 15
    ImportPath  go to state 16


State 8

    1 SourceFile: PackageClause M_semicolon ImportDeclList . TopLevelDeclList
  208 ImportDeclList: ImportDeclList . ImportDecl M_semicolon

    Key_func    shift, and go to state 17
    Key_import  shift, and go to state 7
    Key_type    shift, and go to state 18
    Key_var     shift, and go to state 19

    VarDecl           go to state 20
    Declaration       go to state 21
    FunctionDecl      go to state 22
    MethodDecl        go to state 23
    TopLevelDeclList  go to state 24
    TopLevelDecl      go to state 25
    TypeDecl          go to state 26
    ImportDecl        go to state 27


State 9

  209 ImportDeclList: ImportDecl . M_semicolon

    M_semicolon  shift, and go to state 28


State 10

  215 ImportSpec: Identifier . ImportPath

    String_lit  shift, and go to state 11

    String      go to state 14
    ImportPath  go to state 29


State 11

  205 String: String_lit .

    $default  reduce using rule 205 (String)


State 12

  210 ImportDecl: Key_import M_lparan . ImportSpecList M_rparan

    Identifier  shift, and go to state 10
    String_lit  shift, and go to state 11
    M_dot       shift, and go to state 13

    Identifier  [reduce using rule 212 (ImportSpecList)]
    String_lit  [reduce using rule 212 (ImportSpecList)]
    M_dot       [reduce using rule 212 (ImportSpecList)]
    $default    reduce using rule 212 (ImportSpecList)

    String          go to state 14
    ImportSpecList  go to state 30
    ImportSpec      go to state 31
    ImportPath      go to state 16


State 13

  216 ImportSpec: M_dot . ImportPath

    String_lit  shift, and go to state 11

    String      go to state 14
    ImportPath  go to state 32


State 14

  218 ImportPath: String .

    $default  reduce using rule 218 (ImportPath)


State 15

  211 ImportDecl: Key_import ImportSpec .

    $default  reduce using rule 211 (ImportDecl)


State 16

  217 ImportSpec: ImportPath .

    $default  reduce using rule 217 (ImportSpec)


State 17

   46 FunctionDecl: Key_func . Identifier $@1 OPENB Signature Block CLOSEB
   61 MethodDecl: Key_func . Receiver Identifier Signature

    Identifier  shift, and go to state 33
    M_lparan    shift, and go to state 34

    Parameters  go to state 35
    Receiver    go to state 36


State 18

  170 TypeDecl: Key_type . TypeSpec

    Identifier  shift, and go to state 37

    TypeSpec  go to state 38


State 19

   38 VarDecl: Key_var . VarSpec

    Identifier  shift, and go to state 39

    VarSpec         go to state 40
    IdentifierList  go to state 41


State 20

   44 Declaration: VarDecl .

    $default  reduce using rule 44 (Declaration)


State 21

  109 TopLevelDecl: Declaration .

    $default  reduce using rule 109 (TopLevelDecl)


State 22

  110 TopLevelDecl: FunctionDecl .

    $default  reduce using rule 110 (TopLevelDecl)


State 23

  111 TopLevelDecl: MethodDecl .

    $default  reduce using rule 111 (TopLevelDecl)


State 24

    1 SourceFile: PackageClause M_semicolon ImportDeclList TopLevelDeclList .
   63 TopLevelDeclList: TopLevelDeclList . TopLevelDecl M_semicolon

    Key_func  shift, and go to state 17
    Key_type  shift, and go to state 18
    Key_var   shift, and go to state 19

    $default  reduce using rule 1 (SourceFile)

    VarDecl       go to state 20
    Declaration   go to state 21
    FunctionDecl  go to state 22
    MethodDecl    go to state 23
    TopLevelDecl  go to state 42
    TypeDecl      go to state 26


State 25

   64 TopLevelDeclList: TopLevelDecl . M_semicolon

    M_semicolon  shift, and go to state 43


State 26

   43 Declaration: TypeDecl .

    $default  reduce using rule 43 (Declaration)


State 27

  208 ImportDeclList: ImportDeclList ImportDecl . M_semicolon

    M_semicolon  shift, and go to state 44


State 28

  209 ImportDeclList: ImportDecl M_semicolon .

    $default  reduce using rule 209 (ImportDeclList)


State 29

  215 ImportSpec: Identifier ImportPath .

    $default  reduce using rule 215 (ImportSpec)


State 30

  210 ImportDecl: Key_import M_lparan ImportSpecList . M_rparan
  213 ImportSpecList: ImportSpecList . ImportSpec M_semicolon

    Identifier  shift, and go to state 10
    String_lit  shift, and go to state 11
    M_rparan    shift, and go to state 45
    M_dot       shift, and go to state 13

    String      go to state 14
    ImportSpec  go to state 46
    ImportPath  go to state 16


State 31

  214 ImportSpecList: ImportSpec . M_semicolon

    M_semicolon  shift, and go to state 47


State 32

  216 ImportSpec: M_dot ImportPath .

    $default  reduce using rule 216 (ImportSpec)


State 33

   46 FunctionDecl: Key_func Identifier . $@1 OPENB Signature Block CLOSEB

    $default  reduce using rule 45 ($@1)

    $@1  go to state 48


State 34

   51 Parameters: M_lparan . M_rparan
   52           | M_lparan . ParameterList M_rparan
   53           | M_lparan . ParameterList M_comma M_rparan

    Identifier  shift, and go to state 39
    M_rparan    shift, and go to state 49

    ParameterList   go to state 50
    ParameterDecl   go to state 51
    IdentifierList  go to state 52


State 35

   62 Receiver: Parameters .

    $default  reduce using rule 62 (Receiver)


State 36

   61 MethodDecl: Key_func Receiver . Identifier Signature

    Identifier  shift, and go to state 53


State 37

  171 TypeSpec: Identifier . Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 77
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82


State 38

  170 TypeDecl: Key_type TypeSpec .

    $default  reduce using rule 170 (TypeDecl)


State 39

   59 IdentifierList: Identifier .

    $default  reduce using rule 59 (IdentifierList)


State 40

   38 VarDecl: Key_var VarSpec .

    $default  reduce using rule 38 (VarDecl)


State 41

   39 VarSpec: IdentifierList . Type
   40        | IdentifierList . ArrayType
   41        | IdentifierList . Type ASN_OP ExpressionList
   42        | IdentifierList . ASN_OP ExpressionList
   60 IdentifierList: IdentifierList . M_comma Identifier

    T_int64              shift, and go to state 54
    Identifier           shift, and go to state 55
    T_string             shift, and go to state 56
    T_bool               shift, and go to state 57
    T_int                shift, and go to state 58
    T_int8               shift, and go to state 59
    T_int16              shift, and go to state 60
    T_int32              shift, and go to state 61
    T_uint               shift, and go to state 62
    T_uint16             shift, and go to state 63
    T_uint32             shift, and go to state 64
    T_uint64             shift, and go to state 65
    T_uintptr            shift, and go to state 66
    T_float32            shift, and go to state 67
    T_float64            shift, and go to state 68
    T_complex64          shift, and go to state 69
    T_complex128         shift, and go to state 70
    Key_map              shift, and go to state 71
    Key_struct           shift, and go to state 72
    Op_AddAssign         shift, and go to state 83
    Op_SubAssign         shift, and go to state 84
    Op_MultAssign        shift, and go to state 85
    Op_DivAssign         shift, and go to state 86
    Op_ModAssign         shift, and go to state 87
    Op_unary_or_assign   shift, and go to state 88
    Op_unary_and_assign  shift, and go to state 89
    Op_mult              shift, and go to state 73
    M_comma              shift, and go to state 90
    M_lsqbracket         shift, and go to state 91

    ASN_OP       go to state 92
    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 93
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82
    ArrayType    go to state 94


State 42

   63 TopLevelDeclList: TopLevelDeclList TopLevelDecl . M_semicolon

    M_semicolon  shift, and go to state 95


State 43

   64 TopLevelDeclList: TopLevelDecl M_semicolon .

    $default  reduce using rule 64 (TopLevelDeclList)


State 44

  208 ImportDeclList: ImportDeclList ImportDecl M_semicolon .

    $default  reduce using rule 208 (ImportDeclList)


State 45

  210 ImportDecl: Key_import M_lparan ImportSpecList M_rparan .

    $default  reduce using rule 210 (ImportDecl)


State 46

  213 ImportSpecList: ImportSpecList ImportSpec . M_semicolon

    M_semicolon  shift, and go to state 96


State 47

  214 ImportSpecList: ImportSpec M_semicolon .

    $default  reduce using rule 214 (ImportSpecList)


State 48

   46 FunctionDecl: Key_func Identifier $@1 . OPENB Signature Block CLOSEB

    $default  reduce using rule 3 (OPENB)

    OPENB  go to state 97


State 49

   51 Parameters: M_lparan M_rparan .

    $default  reduce using rule 51 (Parameters)


State 50

   52 Parameters: M_lparan ParameterList . M_rparan
   53           | M_lparan ParameterList . M_comma M_rparan
   55 ParameterList: ParameterList . M_comma ParameterDecl

    M_comma   shift, and go to state 98
    M_rparan  shift, and go to state 99


State 51

   54 ParameterList: ParameterDecl .

    $default  reduce using rule 54 (ParameterList)


State 52

   56 ParameterDecl: IdentifierList . Type
   60 IdentifierList: IdentifierList . M_comma Identifier

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_comma       shift, and go to state 90
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 100
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82


State 53

   61 MethodDecl: Key_func Receiver Identifier . Signature

    M_lparan  shift, and go to state 34

    Signature   go to state 101
    Parameters  go to state 102


State 54

   74 VarType: T_int64 .

    $default  reduce using rule 74 (VarType)


State 55

   93 OperandName: Identifier .

    $default  reduce using rule 93 (OperandName)


State 56

   77 VarType: T_string .

    $default  reduce using rule 77 (VarType)


State 57

   76 VarType: T_bool .

    $default  reduce using rule 76 (VarType)


State 58

   75 VarType: T_int .

    $default  reduce using rule 75 (VarType)


State 59

   72 VarType: T_int8 .

    $default  reduce using rule 72 (VarType)


State 60

   71 VarType: T_int16 .

    $default  reduce using rule 71 (VarType)


State 61

   73 VarType: T_int32 .

    $default  reduce using rule 73 (VarType)


State 62

   78 VarType: T_uint .

    $default  reduce using rule 78 (VarType)


State 63

   79 VarType: T_uint16 .

    $default  reduce using rule 79 (VarType)


State 64

   80 VarType: T_uint32 .

    $default  reduce using rule 80 (VarType)


State 65

   81 VarType: T_uint64 .

    $default  reduce using rule 81 (VarType)


State 66

   82 VarType: T_uintptr .

    $default  reduce using rule 82 (VarType)


State 67

   83 VarType: T_float32 .

    $default  reduce using rule 83 (VarType)


State 68

   84 VarType: T_float64 .

    $default  reduce using rule 84 (VarType)


State 69

   85 VarType: T_complex64 .

    $default  reduce using rule 85 (VarType)


State 70

   86 VarType: T_complex128 .

    $default  reduce using rule 86 (VarType)


State 71

  180 MapType: Key_map . M_lsqbracket Type M_rsqbracket Type

    M_lsqbracket  shift, and go to state 103


State 72

  181 StructType: Key_struct . M_lcurly FieldDeclList M_rcurly
  182           | Key_struct . M_semicolon FieldDeclList M_rcurly
  183           | Key_struct . M_lcurly M_rcurly
  184           | Key_struct . M_semicolon M_rcurly

    M_semicolon  shift, and go to state 104
    M_lcurly     shift, and go to state 105


State 73

  189 PointerType: Op_mult . Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 106
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82


State 74

   68 LiteralType: M_lsqbracket . DOTS M_rsqbracket Operand
  100 SliceType: M_lsqbracket . M_rsqbracket Type

    M_rsqbracket  shift, and go to state 107
    M_dot         shift, and go to state 108

    DOTS  go to state 109


State 75

   87 Type: LiteralType .

    $default  reduce using rule 87 (Type)


State 76

   89 Type: VarType .

    $default  reduce using rule 89 (Type)


State 77

  171 TypeSpec: Identifier Type .

    $default  reduce using rule 171 (TypeSpec)


State 78

   88 Type: OperandName .

    $default  reduce using rule 88 (Type)


State 79

   69 LiteralType: SliceType .

    $default  reduce using rule 69 (LiteralType)


State 80

   70 LiteralType: MapType .

    $default  reduce using rule 70 (LiteralType)


State 81

   66 LiteralType: StructType .

    $default  reduce using rule 66 (LiteralType)


State 82

   67 LiteralType: PointerType .

    $default  reduce using rule 67 (LiteralType)


State 83

   28 ASN_OP: Op_AddAssign .

    $default  reduce using rule 28 (ASN_OP)


State 84

   29 ASN_OP: Op_SubAssign .

    $default  reduce using rule 29 (ASN_OP)


State 85

   32 ASN_OP: Op_MultAssign .

    $default  reduce using rule 32 (ASN_OP)


State 86

   33 ASN_OP: Op_DivAssign .

    $default  reduce using rule 33 (ASN_OP)


State 87

   34 ASN_OP: Op_ModAssign .

    $default  reduce using rule 34 (ASN_OP)


State 88

   30 ASN_OP: Op_unary_or_assign .

    $default  reduce using rule 30 (ASN_OP)


State 89

   31 ASN_OP: Op_unary_and_assign .

    $default  reduce using rule 31 (ASN_OP)


State 90

   60 IdentifierList: IdentifierList M_comma . Identifier

    Identifier  shift, and go to state 110


State 91

   68 LiteralType: M_lsqbracket . DOTS M_rsqbracket Operand
  100 SliceType: M_lsqbracket . M_rsqbracket Type
  190 ArrayType: M_lsqbracket . Expression M_rsqbracket Type

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    M_rsqbracket   shift, and go to state 107
    M_dot          shift, and go to state 108
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression    go to state 127
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    DOTS          go to state 109
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 92

   42 VarSpec: IdentifierList ASN_OP . ExpressionList

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit    go to state 123
    LiteralType     go to state 124
    Operand         go to state 125
    OperandName     go to state 126
    SliceType       go to state 79
    Expression      go to state 139
    Expression1     go to state 128
    Expression2     go to state 129
    Expression3     go to state 130
    Expression4     go to state 131
    Expression5     go to state 132
    UnaryExpr       go to state 133
    PrimaryExpr     go to state 134
    ExpressionList  go to state 140
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    Literal         go to state 135
    BasicLit        go to state 136
    UnaryOp         go to state 137
    String          go to state 138


State 93

   39 VarSpec: IdentifierList Type .
   41        | IdentifierList Type . ASN_OP ExpressionList

    Op_AddAssign         shift, and go to state 83
    Op_SubAssign         shift, and go to state 84
    Op_MultAssign        shift, and go to state 85
    Op_DivAssign         shift, and go to state 86
    Op_ModAssign         shift, and go to state 87
    Op_unary_or_assign   shift, and go to state 88
    Op_unary_and_assign  shift, and go to state 89

    $default  reduce using rule 39 (VarSpec)

    ASN_OP  go to state 141


State 94

   40 VarSpec: IdentifierList ArrayType .

    $default  reduce using rule 40 (VarSpec)


State 95

   63 TopLevelDeclList: TopLevelDeclList TopLevelDecl M_semicolon .

    $default  reduce using rule 63 (TopLevelDeclList)


State 96

  213 ImportSpecList: ImportSpecList ImportSpec M_semicolon .

    $default  reduce using rule 213 (ImportSpecList)


State 97

   46 FunctionDecl: Key_func Identifier $@1 OPENB . Signature Block CLOSEB

    M_lparan  shift, and go to state 34

    Signature   go to state 142
    Parameters  go to state 102


State 98

   53 Parameters: M_lparan ParameterList M_comma . M_rparan
   55 ParameterList: ParameterList M_comma . ParameterDecl

    Identifier  shift, and go to state 39
    M_rparan    shift, and go to state 143

    ParameterDecl   go to state 144
    IdentifierList  go to state 52


State 99

   52 Parameters: M_lparan ParameterList M_rparan .

    $default  reduce using rule 52 (Parameters)


State 100

   56 ParameterDecl: IdentifierList Type .

    $default  reduce using rule 56 (ParameterDecl)


State 101

   61 MethodDecl: Key_func Receiver Identifier Signature .

    $default  reduce using rule 61 (MethodDecl)


State 102

   47 Signature: Parameters .
   48          | Parameters . Result

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lparan      shift, and go to state 145
    M_lsqbracket  shift, and go to state 74

    $default  reduce using rule 47 (Signature)

    Result       go to state 146
    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 147
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82


State 103

  180 MapType: Key_map M_lsqbracket . Type M_rsqbracket Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 148
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82


State 104

  182 StructType: Key_struct M_semicolon . FieldDeclList M_rcurly
  184           | Key_struct M_semicolon . M_rcurly

    Identifier  shift, and go to state 39
    M_rcurly    shift, and go to state 149

    IdentifierList  go to state 150
    FieldDeclList   go to state 151
    FieldDecl       go to state 152


State 105

  181 StructType: Key_struct M_lcurly . FieldDeclList M_rcurly
  183           | Key_struct M_lcurly . M_rcurly

    Identifier  shift, and go to state 39
    M_rcurly    shift, and go to state 153

    IdentifierList  go to state 150
    FieldDeclList   go to state 154
    FieldDecl       go to state 152


State 106

  189 PointerType: Op_mult Type .

    $default  reduce using rule 189 (PointerType)


State 107

  100 SliceType: M_lsqbracket M_rsqbracket . Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 155
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82


State 108

  176 DOTS: M_dot . M_dot M_dot

    M_dot  shift, and go to state 156


State 109

   68 LiteralType: M_lsqbracket DOTS . M_rsqbracket Operand

    M_rsqbracket  shift, and go to state 157


State 110

   60 IdentifierList: IdentifierList M_comma Identifier .

    $default  reduce using rule 60 (IdentifierList)


State 111

  199 UnaryOp: Op_add .

    $default  reduce using rule 199 (UnaryOp)


State 112

  198 BasicLit: Imaginary_lit .

    $default  reduce using rule 198 (BasicLit)


State 113

  194 BasicLit: Float_lit .

    $default  reduce using rule 194 (BasicLit)


State 114

  193 BasicLit: Int_lit .

    $default  reduce using rule 193 (BasicLit)


State 115

  200 UnaryOp: Op_sub .

    $default  reduce using rule 200 (UnaryOp)


State 116

  189 PointerType: Op_mult . Type
  203 UnaryOp: Op_mult .

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    Identifier    [reduce using rule 203 (UnaryOp)]
    Key_map       [reduce using rule 203 (UnaryOp)]
    Key_struct    [reduce using rule 203 (UnaryOp)]
    Op_mult       [reduce using rule 203 (UnaryOp)]
    M_lsqbracket  [reduce using rule 203 (UnaryOp)]
    $default      reduce using rule 203 (UnaryOp)

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 106
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82


State 117

  202 UnaryOp: Op_pow .

    $default  reduce using rule 202 (UnaryOp)


State 118

  204 UnaryOp: Op_unary_and .

    $default  reduce using rule 204 (UnaryOp)


State 119

  201 UnaryOp: Op_unary_not .

    $default  reduce using rule 201 (UnaryOp)


State 120

   92 Operand: M_lparan . Expression M_rparan

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression    go to state 158
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 121

  196 BasicLit: Bool_true .

    $default  reduce using rule 196 (BasicLit)


State 122

  197 BasicLit: Bool_false .

    $default  reduce using rule 197 (BasicLit)


State 123

  192 Literal: CompositeLit .

    $default  reduce using rule 192 (Literal)


State 124

   65 CompositeLit: LiteralType . LiteralValue

    M_semicolon  shift, and go to state 159
    M_lcurly     shift, and go to state 160

    LiteralValue  go to state 161


State 125

  151 PrimaryExpr: Operand .

    $default  reduce using rule 151 (PrimaryExpr)


State 126

   91 Operand: OperandName .
  156 PrimaryExpr: OperandName . StructLiteral

    M_lcurly  shift, and go to state 162

    M_lcurly  [reduce using rule 91 (Operand)]
    $default  reduce using rule 91 (Operand)

    StructLiteral  go to state 163


State 127

  190 ArrayType: M_lsqbracket Expression . M_rsqbracket Type

    M_rsqbracket  shift, and go to state 164


State 128

  124 Expression: Expression1 .
  125 Expression1: Expression1 . Op_relational_or Expression2

    Op_relational_or  shift, and go to state 165

    $default  reduce using rule 124 (Expression)


State 129

  126 Expression1: Expression2 .
  127 Expression2: Expression2 . Op_relational_and Expression3

    Op_relational_and  shift, and go to state 166

    $default  reduce using rule 126 (Expression1)


State 130

  128 Expression2: Expression3 .
  129 Expression3: Expression3 . REL_OP Expression4

    Op_greater     shift, and go to state 167
    Op_less        shift, and go to state 168
    Op_greater_eq  shift, and go to state 169
    Op_less_eq     shift, and go to state 170
    Op_not_equal   shift, and go to state 171
    Op_equality    shift, and go to state 172

    $default  reduce using rule 128 (Expression2)

    REL_OP  go to state 173


State 131

  130 Expression3: Expression4 .
  131 Expression4: Expression4 . Op_unary_or Expression5
  132            | Expression4 . Op_add Expression5
  133            | Expression4 . Op_sub Expression5

    Op_add       shift, and go to state 174
    Op_sub       shift, and go to state 175
    Op_unary_or  shift, and go to state 176

    $default  reduce using rule 130 (Expression3)


State 132

  134 Expression4: Expression5 .
  135 Expression5: Expression5 . MUL_OP PrimaryExpr

    Op_greater_greater  shift, and go to state 177
    Op_less_less        shift, and go to state 178
    Op_mult             shift, and go to state 179
    Op_divide           shift, and go to state 180
    Op_mod              shift, and go to state 181
    Op_unary_and        shift, and go to state 182

    $default  reduce using rule 134 (Expression4)

    MUL_OP  go to state 183


State 133

  136 Expression5: UnaryExpr .

    $default  reduce using rule 136 (Expression5)


State 134

  149 UnaryExpr: PrimaryExpr .
  152 PrimaryExpr: PrimaryExpr . Selector
  153            | PrimaryExpr . Slice
  154            | PrimaryExpr . TypeAssertion
  155            | PrimaryExpr . Arguments

    M_lparan      shift, and go to state 184
    M_lsqbracket  shift, and go to state 185
    M_dot         shift, and go to state 186

    M_dot     [reduce using rule 149 (UnaryExpr)]
    $default  reduce using rule 149 (UnaryExpr)

    Selector       go to state 187
    Slice          go to state 188
    TypeAssertion  go to state 189
    Arguments      go to state 190


State 135

   90 Operand: Literal .

    $default  reduce using rule 90 (Operand)


State 136

  191 Literal: BasicLit .

    $default  reduce using rule 191 (Literal)


State 137

  150 UnaryExpr: UnaryOp . PrimaryExpr

    Identifier     shift, and go to state 55
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_mult        shift, and go to state 73
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    PrimaryExpr   go to state 191
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    String        go to state 138


State 138

  195 BasicLit: String .

    $default  reduce using rule 195 (BasicLit)


State 139

  177 ExpressionList: Expression .

    $default  reduce using rule 177 (ExpressionList)


State 140

   42 VarSpec: IdentifierList ASN_OP ExpressionList .
  178 ExpressionList: ExpressionList . M_comma Expression

    M_comma  shift, and go to state 192

    $default  reduce using rule 42 (VarSpec)


State 141

   41 VarSpec: IdentifierList Type ASN_OP . ExpressionList

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit    go to state 123
    LiteralType     go to state 124
    Operand         go to state 125
    OperandName     go to state 126
    SliceType       go to state 79
    Expression      go to state 139
    Expression1     go to state 128
    Expression2     go to state 129
    Expression3     go to state 130
    Expression4     go to state 131
    Expression5     go to state 132
    UnaryExpr       go to state 133
    PrimaryExpr     go to state 134
    ExpressionList  go to state 193
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    Literal         go to state 135
    BasicLit        go to state 136
    UnaryOp         go to state 137
    String          go to state 138


State 142

   46 FunctionDecl: Key_func Identifier $@1 OPENB Signature . Block CLOSEB

    M_lcurly  shift, and go to state 194

    Block  go to state 195


State 143

   53 Parameters: M_lparan ParameterList M_comma M_rparan .

    $default  reduce using rule 53 (Parameters)


State 144

   55 ParameterList: ParameterList M_comma ParameterDecl .

    $default  reduce using rule 55 (ParameterList)


State 145

   49 Result: M_lparan . TypeList M_rparan

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    TypeList     go to state 196
    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 197
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82


State 146

   48 Signature: Parameters Result .

    $default  reduce using rule 48 (Signature)


State 147

   50 Result: Type .

    $default  reduce using rule 50 (Result)


State 148

  180 MapType: Key_map M_lsqbracket Type . M_rsqbracket Type

    M_rsqbracket  shift, and go to state 198


State 149

  184 StructType: Key_struct M_semicolon M_rcurly .

    $default  reduce using rule 184 (StructType)


State 150

   60 IdentifierList: IdentifierList . M_comma Identifier
  187 FieldDecl: IdentifierList . Type String
  188          | IdentifierList . Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_comma       shift, and go to state 90
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 199
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82


State 151

  182 StructType: Key_struct M_semicolon FieldDeclList . M_rcurly
  186 FieldDeclList: FieldDeclList . FieldDecl M_semicolon

    Identifier  shift, and go to state 39
    M_rcurly    shift, and go to state 200

    IdentifierList  go to state 150
    FieldDecl       go to state 201


State 152

  185 FieldDeclList: FieldDecl . M_semicolon

    M_semicolon  shift, and go to state 202


State 153

  183 StructType: Key_struct M_lcurly M_rcurly .

    $default  reduce using rule 183 (StructType)


State 154

  181 StructType: Key_struct M_lcurly FieldDeclList . M_rcurly
  186 FieldDeclList: FieldDeclList . FieldDecl M_semicolon

    Identifier  shift, and go to state 39
    M_rcurly    shift, and go to state 203

    IdentifierList  go to state 150
    FieldDecl       go to state 201


State 155

  100 SliceType: M_lsqbracket M_rsqbracket Type .

    $default  reduce using rule 100 (SliceType)


State 156

  176 DOTS: M_dot M_dot . M_dot

    M_dot  shift, and go to state 204


State 157

   68 LiteralType: M_lsqbracket DOTS M_rsqbracket . Operand

    Identifier     shift, and go to state 55
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_mult        shift, and go to state 73
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 205
    OperandName   go to state 206
    SliceType     go to state 79
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    String        go to state 138


State 158

   92 Operand: M_lparan Expression . M_rparan

    M_rparan  shift, and go to state 207


State 159

   95 LiteralValue: M_semicolon . M_rcurly
   97             | M_semicolon . ElementList M_rcurly
   99             | M_semicolon . ElementList M_comma M_rcurly

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_semicolon    shift, and go to state 159
    M_lcurly       shift, and go to state 160
    M_rcurly       shift, and go to state 208
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    LiteralValue  go to state 209
    SliceType     go to state 79
    ElementList   go to state 210
    KeyedElement  go to state 211
    Key           go to state 212
    Element       go to state 213
    Expression    go to state 214
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 160

   94 LiteralValue: M_lcurly . M_rcurly
   96             | M_lcurly . ElementList M_rcurly
   98             | M_lcurly . ElementList M_comma M_rcurly

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_semicolon    shift, and go to state 159
    M_lcurly       shift, and go to state 160
    M_rcurly       shift, and go to state 215
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    LiteralValue  go to state 209
    SliceType     go to state 79
    ElementList   go to state 216
    KeyedElement  go to state 211
    Key           go to state 212
    Element       go to state 213
    Expression    go to state 214
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 161

   65 CompositeLit: LiteralType LiteralValue .

    $default  reduce using rule 65 (CompositeLit)


State 162

  158 StructLiteral: M_lcurly . KeyValList M_rcurly

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    $default  reduce using rule 159 (KeyValList)

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression    go to state 217
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    KeyValList    go to state 218
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 163

  156 PrimaryExpr: OperandName StructLiteral .

    $default  reduce using rule 156 (PrimaryExpr)


State 164

  190 ArrayType: M_lsqbracket Expression M_rsqbracket . Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 219
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82


State 165

  125 Expression1: Expression1 Op_relational_or . Expression2

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression2   go to state 220
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 166

  127 Expression2: Expression2 Op_relational_and . Expression3

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression3   go to state 221
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 167

  140 REL_OP: Op_greater .

    $default  reduce using rule 140 (REL_OP)


State 168

  139 REL_OP: Op_less .

    $default  reduce using rule 139 (REL_OP)


State 169

  141 REL_OP: Op_greater_eq .

    $default  reduce using rule 141 (REL_OP)


State 170

  142 REL_OP: Op_less_eq .

    $default  reduce using rule 142 (REL_OP)


State 171

  138 REL_OP: Op_not_equal .

    $default  reduce using rule 138 (REL_OP)


State 172

  137 REL_OP: Op_equality .

    $default  reduce using rule 137 (REL_OP)


State 173

  129 Expression3: Expression3 REL_OP . Expression4

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression4   go to state 222
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 174

  132 Expression4: Expression4 Op_add . Expression5

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression5   go to state 223
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 175

  133 Expression4: Expression4 Op_sub . Expression5

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression5   go to state 224
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 176

  131 Expression4: Expression4 Op_unary_or . Expression5

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression5   go to state 225
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 177

  147 MUL_OP: Op_greater_greater .

    $default  reduce using rule 147 (MUL_OP)


State 178

  146 MUL_OP: Op_less_less .

    $default  reduce using rule 146 (MUL_OP)


State 179

  143 MUL_OP: Op_mult .

    $default  reduce using rule 143 (MUL_OP)


State 180

  144 MUL_OP: Op_divide .

    $default  reduce using rule 144 (MUL_OP)


State 181

  145 MUL_OP: Op_mod .

    $default  reduce using rule 145 (MUL_OP)


State 182

  148 MUL_OP: Op_unary_and .

    $default  reduce using rule 148 (MUL_OP)


State 183

  135 Expression5: Expression5 MUL_OP . PrimaryExpr

    Identifier     shift, and go to state 55
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_mult        shift, and go to state 73
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    PrimaryExpr   go to state 226
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    String        go to state 138


State 184

  173 Arguments: M_lparan . M_rparan
  174          | M_lparan . ExpressionList M_rparan
  175          | M_lparan . ExpressionList DOTS M_rparan

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_rparan       shift, and go to state 227
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit    go to state 123
    LiteralType     go to state 124
    Operand         go to state 125
    OperandName     go to state 126
    SliceType       go to state 79
    Expression      go to state 139
    Expression1     go to state 128
    Expression2     go to state 129
    Expression3     go to state 130
    Expression4     go to state 131
    Expression5     go to state 132
    UnaryExpr       go to state 133
    PrimaryExpr     go to state 134
    ExpressionList  go to state 228
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    Literal         go to state 135
    BasicLit        go to state 136
    UnaryOp         go to state 137
    String          go to state 138


State 185

  164 Slice: M_lsqbracket . M_colon M_rsqbracket
  165      | M_lsqbracket . M_colon Expression M_rsqbracket
  166      | M_lsqbracket . Expression M_colon M_rsqbracket
  167      | M_lsqbracket . Expression M_colon Expression M_rsqbracket
  168      | M_lsqbracket . M_colon Expression M_colon Expression M_rsqbracket
  169      | M_lsqbracket . Expression M_colon Expression M_colon Expression M_rsqbracket

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_colon        shift, and go to state 229
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression    go to state 230
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 186

  162 Selector: M_dot . Identifier
  172 TypeAssertion: M_dot . M_lparan Type M_rparan

    Identifier  shift, and go to state 231
    M_lparan    shift, and go to state 232


State 187

  152 PrimaryExpr: PrimaryExpr Selector .

    $default  reduce using rule 152 (PrimaryExpr)


State 188

  153 PrimaryExpr: PrimaryExpr Slice .

    $default  reduce using rule 153 (PrimaryExpr)


State 189

  154 PrimaryExpr: PrimaryExpr TypeAssertion .

    $default  reduce using rule 154 (PrimaryExpr)


State 190

  155 PrimaryExpr: PrimaryExpr Arguments .

    $default  reduce using rule 155 (PrimaryExpr)


State 191

  150 UnaryExpr: UnaryOp PrimaryExpr .
  152 PrimaryExpr: PrimaryExpr . Selector
  153            | PrimaryExpr . Slice
  154            | PrimaryExpr . TypeAssertion
  155            | PrimaryExpr . Arguments

    M_lparan      shift, and go to state 184
    M_lsqbracket  shift, and go to state 185
    M_dot         shift, and go to state 186

    M_dot     [reduce using rule 150 (UnaryExpr)]
    $default  reduce using rule 150 (UnaryExpr)

    Selector       go to state 187
    Slice          go to state 188
    TypeAssertion  go to state 189
    Arguments      go to state 190


State 192

  178 ExpressionList: ExpressionList M_comma . Expression

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression    go to state 233
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 193

   41 VarSpec: IdentifierList Type ASN_OP ExpressionList .
  178 ExpressionList: ExpressionList . M_comma Expression

    M_comma  shift, and go to state 192

    $default  reduce using rule 41 (VarSpec)


State 194

    2 Block: M_lcurly . OPENB StatementList CLOSEB M_rcurly

    $default  reduce using rule 3 (OPENB)

    OPENB  go to state 234


State 195

   46 FunctionDecl: Key_func Identifier $@1 OPENB Signature Block . CLOSEB

    $default  reduce using rule 4 (CLOSEB)

    CLOSEB  go to state 235


State 196

   49 Result: M_lparan TypeList . M_rparan
   57 TypeList: TypeList . M_comma Type

    M_comma   shift, and go to state 236
    M_rparan  shift, and go to state 237


State 197

   58 TypeList: Type .

    $default  reduce using rule 58 (TypeList)


State 198

  180 MapType: Key_map M_lsqbracket Type M_rsqbracket . Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 238
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82


State 199

  187 FieldDecl: IdentifierList Type . String
  188          | IdentifierList Type .

    String_lit  shift, and go to state 11

    $default  reduce using rule 188 (FieldDecl)

    String  go to state 239


State 200

  182 StructType: Key_struct M_semicolon FieldDeclList M_rcurly .

    $default  reduce using rule 182 (StructType)


State 201

  186 FieldDeclList: FieldDeclList FieldDecl . M_semicolon

    M_semicolon  shift, and go to state 240


State 202

  185 FieldDeclList: FieldDecl M_semicolon .

    $default  reduce using rule 185 (FieldDeclList)


State 203

  181 StructType: Key_struct M_lcurly FieldDeclList M_rcurly .

    $default  reduce using rule 181 (StructType)


State 204

  176 DOTS: M_dot M_dot M_dot .

    $default  reduce using rule 176 (DOTS)


State 205

   68 LiteralType: M_lsqbracket DOTS M_rsqbracket Operand .

    $default  reduce using rule 68 (LiteralType)


State 206

   91 Operand: OperandName .

    $default  reduce using rule 91 (Operand)


State 207

   92 Operand: M_lparan Expression M_rparan .

    $default  reduce using rule 92 (Operand)


State 208

   95 LiteralValue: M_semicolon M_rcurly .

    $default  reduce using rule 95 (LiteralValue)


State 209

  106 Key: LiteralValue .
  108 Element: LiteralValue .

    M_colon   reduce using rule 106 (Key)
    $default  reduce using rule 108 (Element)


State 210

   97 LiteralValue: M_semicolon ElementList . M_rcurly
   99             | M_semicolon ElementList . M_comma M_rcurly
  102 ElementList: ElementList . M_comma KeyedElement

    M_comma   shift, and go to state 241
    M_rcurly  shift, and go to state 242


State 211

  101 ElementList: KeyedElement .

    $default  reduce using rule 101 (ElementList)


State 212

  104 KeyedElement: Key . M_colon Element

    M_colon  shift, and go to state 243


State 213

  103 KeyedElement: Element .

    $default  reduce using rule 103 (KeyedElement)


State 214

  105 Key: Expression .
  107 Element: Expression .

    M_colon   reduce using rule 105 (Key)
    $default  reduce using rule 107 (Element)


State 215

   94 LiteralValue: M_lcurly M_rcurly .

    $default  reduce using rule 94 (LiteralValue)


State 216

   96 LiteralValue: M_lcurly ElementList . M_rcurly
   98             | M_lcurly ElementList . M_comma M_rcurly
  102 ElementList: ElementList . M_comma KeyedElement

    M_comma   shift, and go to state 244
    M_rcurly  shift, and go to state 245


State 217

  160 KeyValList: Expression . M_colon Expression
  161           | Expression . M_colon Expression M_comma KeyValList

    M_colon  shift, and go to state 246


State 218

  158 StructLiteral: M_lcurly KeyValList . M_rcurly

    M_rcurly  shift, and go to state 247


State 219

  190 ArrayType: M_lsqbracket Expression M_rsqbracket Type .

    $default  reduce using rule 190 (ArrayType)


State 220

  125 Expression1: Expression1 Op_relational_or Expression2 .
  127 Expression2: Expression2 . Op_relational_and Expression3

    Op_relational_and  shift, and go to state 166

    $default  reduce using rule 125 (Expression1)


State 221

  127 Expression2: Expression2 Op_relational_and Expression3 .
  129 Expression3: Expression3 . REL_OP Expression4

    Op_greater     shift, and go to state 167
    Op_less        shift, and go to state 168
    Op_greater_eq  shift, and go to state 169
    Op_less_eq     shift, and go to state 170
    Op_not_equal   shift, and go to state 171
    Op_equality    shift, and go to state 172

    $default  reduce using rule 127 (Expression2)

    REL_OP  go to state 173


State 222

  129 Expression3: Expression3 REL_OP Expression4 .
  131 Expression4: Expression4 . Op_unary_or Expression5
  132            | Expression4 . Op_add Expression5
  133            | Expression4 . Op_sub Expression5

    Op_add       shift, and go to state 174
    Op_sub       shift, and go to state 175
    Op_unary_or  shift, and go to state 176

    $default  reduce using rule 129 (Expression3)


State 223

  132 Expression4: Expression4 Op_add Expression5 .
  135 Expression5: Expression5 . MUL_OP PrimaryExpr

    Op_greater_greater  shift, and go to state 177
    Op_less_less        shift, and go to state 178
    Op_mult             shift, and go to state 179
    Op_divide           shift, and go to state 180
    Op_mod              shift, and go to state 181
    Op_unary_and        shift, and go to state 182

    $default  reduce using rule 132 (Expression4)

    MUL_OP  go to state 183


State 224

  133 Expression4: Expression4 Op_sub Expression5 .
  135 Expression5: Expression5 . MUL_OP PrimaryExpr

    Op_greater_greater  shift, and go to state 177
    Op_less_less        shift, and go to state 178
    Op_mult             shift, and go to state 179
    Op_divide           shift, and go to state 180
    Op_mod              shift, and go to state 181
    Op_unary_and        shift, and go to state 182

    $default  reduce using rule 133 (Expression4)

    MUL_OP  go to state 183


State 225

  131 Expression4: Expression4 Op_unary_or Expression5 .
  135 Expression5: Expression5 . MUL_OP PrimaryExpr

    Op_greater_greater  shift, and go to state 177
    Op_less_less        shift, and go to state 178
    Op_mult             shift, and go to state 179
    Op_divide           shift, and go to state 180
    Op_mod              shift, and go to state 181
    Op_unary_and        shift, and go to state 182

    $default  reduce using rule 131 (Expression4)

    MUL_OP  go to state 183


State 226

  135 Expression5: Expression5 MUL_OP PrimaryExpr .
  152 PrimaryExpr: PrimaryExpr . Selector
  153            | PrimaryExpr . Slice
  154            | PrimaryExpr . TypeAssertion
  155            | PrimaryExpr . Arguments

    M_lparan      shift, and go to state 184
    M_lsqbracket  shift, and go to state 185
    M_dot         shift, and go to state 186

    M_dot     [reduce using rule 135 (Expression5)]
    $default  reduce using rule 135 (Expression5)

    Selector       go to state 187
    Slice          go to state 188
    TypeAssertion  go to state 189
    Arguments      go to state 190


State 227

  173 Arguments: M_lparan M_rparan .

    $default  reduce using rule 173 (Arguments)


State 228

  174 Arguments: M_lparan ExpressionList . M_rparan
  175          | M_lparan ExpressionList . DOTS M_rparan
  178 ExpressionList: ExpressionList . M_comma Expression

    M_comma   shift, and go to state 192
    M_rparan  shift, and go to state 248
    M_dot     shift, and go to state 108

    DOTS  go to state 249


State 229

  164 Slice: M_lsqbracket M_colon . M_rsqbracket
  165      | M_lsqbracket M_colon . Expression M_rsqbracket
  168      | M_lsqbracket M_colon . Expression M_colon Expression M_rsqbracket

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    M_rsqbracket   shift, and go to state 250
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression    go to state 251
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 230

  166 Slice: M_lsqbracket Expression . M_colon M_rsqbracket
  167      | M_lsqbracket Expression . M_colon Expression M_rsqbracket
  169      | M_lsqbracket Expression . M_colon Expression M_colon Expression M_rsqbracket

    M_colon  shift, and go to state 252


State 231

  162 Selector: M_dot Identifier .

    $default  reduce using rule 162 (Selector)


State 232

  172 TypeAssertion: M_dot M_lparan . Type M_rparan

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 253
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82


State 233

  178 ExpressionList: ExpressionList M_comma Expression .

    $default  reduce using rule 178 (ExpressionList)


State 234

    2 Block: M_lcurly OPENB . StatementList CLOSEB M_rcurly

    Identifier     shift, and go to state 254
    Op_add         shift, and go to state 111
    Key_break      shift, and go to state 255
    Key_continue   shift, and go to state 256
    Key_for        shift, and go to state 257
    Key_if         shift, and go to state 258
    Key_map        shift, and go to state 71
    Key_return     shift, and go to state 259
    Key_struct     shift, and go to state 72
    Key_type       shift, and go to state 18
    Key_var        shift, and go to state 19
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lcurly       shift, and go to state 194
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    $default  reduce using rule 23 (EmptyStmt)

    Block           go to state 260
    StatementList   go to state 261
    Statement       go to state 262
    SimpleStmt      go to state 263
    EmptyStmt       go to state 264
    ExpressionStmt  go to state 265
    IncDecStmt      go to state 266
    Assignment      go to state 267
    ShortVarDecl    go to state 268
    VarDecl         go to state 20
    Declaration     go to state 269
    CompositeLit    go to state 123
    LiteralType     go to state 124
    Operand         go to state 125
    OperandName     go to state 126
    SliceType       go to state 79
    LabeledStmt     go to state 270
    ReturnStmt      go to state 271
    BreakStmt       go to state 272
    ContinueStmt    go to state 273
    if_stmt         go to state 274
    ForStmt         go to state 275
    Expression      go to state 276
    Expression1     go to state 128
    Expression2     go to state 129
    Expression3     go to state 130
    Expression4     go to state 131
    Expression5     go to state 132
    UnaryExpr       go to state 133
    PrimaryExpr     go to state 277
    PrimaryExpr2    go to state 278
    TypeDecl        go to state 26
    ExpressionList  go to state 279
    ArrayList       go to state 280
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    Literal         go to state 135
    BasicLit        go to state 136
    UnaryOp         go to state 137
    String          go to state 138


State 235

   46 FunctionDecl: Key_func Identifier $@1 OPENB Signature Block CLOSEB .

    $default  reduce using rule 46 (FunctionDecl)


State 236

   57 TypeList: TypeList M_comma . Type

    T_int64       shift, and go to state 54
    Identifier    shift, and go to state 55
    T_string      shift, and go to state 56
    T_bool        shift, and go to state 57
    T_int         shift, and go to state 58
    T_int8        shift, and go to state 59
    T_int16       shift, and go to state 60
    T_int32       shift, and go to state 61
    T_uint        shift, and go to state 62
    T_uint16      shift, and go to state 63
    T_uint32      shift, and go to state 64
    T_uint64      shift, and go to state 65
    T_uintptr     shift, and go to state 66
    T_float32     shift, and go to state 67
    T_float64     shift, and go to state 68
    T_complex64   shift, and go to state 69
    T_complex128  shift, and go to state 70
    Key_map       shift, and go to state 71
    Key_struct    shift, and go to state 72
    Op_mult       shift, and go to state 73
    M_lsqbracket  shift, and go to state 74

    LiteralType  go to state 75
    VarType      go to state 76
    Type         go to state 281
    OperandName  go to state 78
    SliceType    go to state 79
    MapType      go to state 80
    StructType   go to state 81
    PointerType  go to state 82


State 237

   49 Result: M_lparan TypeList M_rparan .

    $default  reduce using rule 49 (Result)


State 238

  180 MapType: Key_map M_lsqbracket Type M_rsqbracket Type .

    $default  reduce using rule 180 (MapType)


State 239

  187 FieldDecl: IdentifierList Type String .

    $default  reduce using rule 187 (FieldDecl)


State 240

  186 FieldDeclList: FieldDeclList FieldDecl M_semicolon .

    $default  reduce using rule 186 (FieldDeclList)


State 241

   99 LiteralValue: M_semicolon ElementList M_comma . M_rcurly
  102 ElementList: ElementList M_comma . KeyedElement

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_semicolon    shift, and go to state 159
    M_lcurly       shift, and go to state 160
    M_rcurly       shift, and go to state 282
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    LiteralValue  go to state 209
    SliceType     go to state 79
    KeyedElement  go to state 283
    Key           go to state 212
    Element       go to state 213
    Expression    go to state 214
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 242

   97 LiteralValue: M_semicolon ElementList M_rcurly .

    $default  reduce using rule 97 (LiteralValue)


State 243

  104 KeyedElement: Key M_colon . Element

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_semicolon    shift, and go to state 159
    M_lcurly       shift, and go to state 160
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    LiteralValue  go to state 284
    SliceType     go to state 79
    Element       go to state 285
    Expression    go to state 286
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 244

   98 LiteralValue: M_lcurly ElementList M_comma . M_rcurly
  102 ElementList: ElementList M_comma . KeyedElement

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_semicolon    shift, and go to state 159
    M_lcurly       shift, and go to state 160
    M_rcurly       shift, and go to state 287
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    LiteralValue  go to state 209
    SliceType     go to state 79
    KeyedElement  go to state 283
    Key           go to state 212
    Element       go to state 213
    Expression    go to state 214
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 245

   96 LiteralValue: M_lcurly ElementList M_rcurly .

    $default  reduce using rule 96 (LiteralValue)


State 246

  160 KeyValList: Expression M_colon . Expression
  161           | Expression M_colon . Expression M_comma KeyValList

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression    go to state 288
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 247

  158 StructLiteral: M_lcurly KeyValList M_rcurly .

    $default  reduce using rule 158 (StructLiteral)


State 248

  174 Arguments: M_lparan ExpressionList M_rparan .

    $default  reduce using rule 174 (Arguments)


State 249

  175 Arguments: M_lparan ExpressionList DOTS . M_rparan

    M_rparan  shift, and go to state 289


State 250

  164 Slice: M_lsqbracket M_colon M_rsqbracket .

    $default  reduce using rule 164 (Slice)


State 251

  165 Slice: M_lsqbracket M_colon Expression . M_rsqbracket
  168      | M_lsqbracket M_colon Expression . M_colon Expression M_rsqbracket

    M_colon       shift, and go to state 290
    M_rsqbracket  shift, and go to state 291


State 252

  166 Slice: M_lsqbracket Expression M_colon . M_rsqbracket
  167      | M_lsqbracket Expression M_colon . Expression M_rsqbracket
  169      | M_lsqbracket Expression M_colon . Expression M_colon Expression M_rsqbracket

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    M_rsqbracket   shift, and go to state 292
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression    go to state 293
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 253

  172 TypeAssertion: M_dot M_lparan Type . M_rparan

    M_rparan  shift, and go to state 294


State 254

   93 OperandName: Identifier .
  112 LabeledStmt: Identifier . M_colon Statement

    M_colon  shift, and go to state 295

    $default  reduce using rule 93 (OperandName)


State 255

  115 BreakStmt: Key_break .
  116          | Key_break . Identifier

    Identifier  shift, and go to state 296

    $default  reduce using rule 115 (BreakStmt)


State 256

  117 ContinueStmt: Key_continue .
  118             | Key_continue . Identifier

    Identifier  shift, and go to state 297

    $default  reduce using rule 117 (ContinueStmt)


State 257

  123 ForStmt: Key_for . OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB

    $default  reduce using rule 3 (OPENB)

    OPENB  go to state 298


State 258

  119 if_stmt: Key_if . Expression OPENB Block elif_test_suite
  120        | Key_if . Expression OPENB Block elif_test_suite Key_else CLOSEB Block

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression    go to state 299
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 259

  113 ReturnStmt: Key_return .
  114           | Key_return . ExpressionList

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    $default  reduce using rule 113 (ReturnStmt)

    CompositeLit    go to state 123
    LiteralType     go to state 124
    Operand         go to state 125
    OperandName     go to state 126
    SliceType       go to state 79
    Expression      go to state 139
    Expression1     go to state 128
    Expression2     go to state 129
    Expression3     go to state 130
    Expression4     go to state 131
    Expression5     go to state 132
    UnaryExpr       go to state 133
    PrimaryExpr     go to state 134
    ExpressionList  go to state 300
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    Literal         go to state 135
    BasicLit        go to state 136
    UnaryOp         go to state 137
    String          go to state 138


State 260

   15 Statement: Block .

    $default  reduce using rule 15 (Statement)


State 261

    2 Block: M_lcurly OPENB StatementList . CLOSEB M_rcurly
    7 StatementList: StatementList . Statement M_semicolon

    Identifier     shift, and go to state 254
    Op_add         shift, and go to state 111
    Key_break      shift, and go to state 255
    Key_continue   shift, and go to state 256
    Key_for        shift, and go to state 257
    Key_if         shift, and go to state 258
    Key_map        shift, and go to state 71
    Key_return     shift, and go to state 259
    Key_struct     shift, and go to state 72
    Key_type       shift, and go to state 18
    Key_var        shift, and go to state 19
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lcurly       shift, and go to state 194
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    M_semicolon  reduce using rule 23 (EmptyStmt)
    $default     reduce using rule 4 (CLOSEB)

    Block           go to state 260
    CLOSEB          go to state 301
    Statement       go to state 302
    SimpleStmt      go to state 263
    EmptyStmt       go to state 264
    ExpressionStmt  go to state 265
    IncDecStmt      go to state 266
    Assignment      go to state 267
    ShortVarDecl    go to state 268
    VarDecl         go to state 20
    Declaration     go to state 269
    CompositeLit    go to state 123
    LiteralType     go to state 124
    Operand         go to state 125
    OperandName     go to state 126
    SliceType       go to state 79
    LabeledStmt     go to state 270
    ReturnStmt      go to state 271
    BreakStmt       go to state 272
    ContinueStmt    go to state 273
    if_stmt         go to state 274
    ForStmt         go to state 275
    Expression      go to state 276
    Expression1     go to state 128
    Expression2     go to state 129
    Expression3     go to state 130
    Expression4     go to state 131
    Expression5     go to state 132
    UnaryExpr       go to state 133
    PrimaryExpr     go to state 277
    PrimaryExpr2    go to state 278
    TypeDecl        go to state 26
    ExpressionList  go to state 279
    ArrayList       go to state 280
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    Literal         go to state 135
    BasicLit        go to state 136
    UnaryOp         go to state 137
    String          go to state 138


State 262

    8 StatementList: Statement . M_semicolon

    M_semicolon  shift, and go to state 303


State 263

   11 Statement: SimpleStmt .

    $default  reduce using rule 11 (Statement)


State 264

   18 SimpleStmt: EmptyStmt .

    $default  reduce using rule 18 (SimpleStmt)


State 265

   19 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 19 (SimpleStmt)


State 266

   20 SimpleStmt: IncDecStmt .

    $default  reduce using rule 20 (SimpleStmt)


State 267

   21 SimpleStmt: Assignment .

    $default  reduce using rule 21 (SimpleStmt)


State 268

   22 SimpleStmt: ShortVarDecl .

    $default  reduce using rule 22 (SimpleStmt)


State 269

    9 Statement: Declaration .

    $default  reduce using rule 9 (Statement)


State 270

   10 Statement: LabeledStmt .

    $default  reduce using rule 10 (Statement)


State 271

   12 Statement: ReturnStmt .

    $default  reduce using rule 12 (Statement)


State 272

   13 Statement: BreakStmt .

    $default  reduce using rule 13 (Statement)


State 273

   14 Statement: ContinueStmt .

    $default  reduce using rule 14 (Statement)


State 274

   16 Statement: if_stmt .

    $default  reduce using rule 16 (Statement)


State 275

   17 Statement: ForStmt .

    $default  reduce using rule 17 (Statement)


State 276

   24 ExpressionStmt: Expression .
   25 IncDecStmt: Expression . Op_unary_add
   26           | Expression . Op_unary_sub
  177 ExpressionList: Expression .

    Op_unary_add  shift, and go to state 304
    Op_unary_sub  shift, and go to state 305

    M_semicolon  reduce using rule 24 (ExpressionStmt)
    M_lcurly     reduce using rule 24 (ExpressionStmt)
    $default     reduce using rule 177 (ExpressionList)


State 277

  149 UnaryExpr: PrimaryExpr .
  152 PrimaryExpr: PrimaryExpr . Selector
  153            | PrimaryExpr . Slice
  154            | PrimaryExpr . TypeAssertion
  155            | PrimaryExpr . Arguments
  157 PrimaryExpr2: PrimaryExpr . Index

    M_lparan      shift, and go to state 184
    M_lsqbracket  shift, and go to state 306
    M_dot         shift, and go to state 186

    $default  reduce using rule 149 (UnaryExpr)

    Selector       go to state 187
    Index          go to state 307
    Slice          go to state 188
    TypeAssertion  go to state 189
    Arguments      go to state 190


State 278

  179 ArrayList: PrimaryExpr2 .

    $default  reduce using rule 179 (ArrayList)


State 279

   27 Assignment: ExpressionList . ASN_OP ExpressionList
   35 ShortVarDecl: ExpressionList . Op_assign ExpressionList
   37             | ExpressionList . Op_assign ArrayList
  178 ExpressionList: ExpressionList . M_comma Expression

    Op_AddAssign         shift, and go to state 83
    Op_SubAssign         shift, and go to state 84
    Op_MultAssign        shift, and go to state 85
    Op_DivAssign         shift, and go to state 86
    Op_ModAssign         shift, and go to state 87
    Op_unary_or_assign   shift, and go to state 88
    Op_unary_and_assign  shift, and go to state 89
    Op_assign            shift, and go to state 308
    M_comma              shift, and go to state 192

    ASN_OP  go to state 309


State 280

   36 ShortVarDecl: ArrayList . Op_assign ExpressionList

    Op_assign  shift, and go to state 310


State 281

   57 TypeList: TypeList M_comma Type .

    $default  reduce using rule 57 (TypeList)


State 282

   99 LiteralValue: M_semicolon ElementList M_comma M_rcurly .

    $default  reduce using rule 99 (LiteralValue)


State 283

  102 ElementList: ElementList M_comma KeyedElement .

    $default  reduce using rule 102 (ElementList)


State 284

  108 Element: LiteralValue .

    $default  reduce using rule 108 (Element)


State 285

  104 KeyedElement: Key M_colon Element .

    $default  reduce using rule 104 (KeyedElement)


State 286

  107 Element: Expression .

    $default  reduce using rule 107 (Element)


State 287

   98 LiteralValue: M_lcurly ElementList M_comma M_rcurly .

    $default  reduce using rule 98 (LiteralValue)


State 288

  160 KeyValList: Expression M_colon Expression .
  161           | Expression M_colon Expression . M_comma KeyValList

    M_comma  shift, and go to state 311

    $default  reduce using rule 160 (KeyValList)


State 289

  175 Arguments: M_lparan ExpressionList DOTS M_rparan .

    $default  reduce using rule 175 (Arguments)


State 290

  168 Slice: M_lsqbracket M_colon Expression M_colon . Expression M_rsqbracket

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression    go to state 312
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 291

  165 Slice: M_lsqbracket M_colon Expression M_rsqbracket .

    $default  reduce using rule 165 (Slice)


State 292

  166 Slice: M_lsqbracket Expression M_colon M_rsqbracket .

    $default  reduce using rule 166 (Slice)


State 293

  167 Slice: M_lsqbracket Expression M_colon Expression . M_rsqbracket
  169      | M_lsqbracket Expression M_colon Expression . M_colon Expression M_rsqbracket

    M_colon       shift, and go to state 313
    M_rsqbracket  shift, and go to state 314


State 294

  172 TypeAssertion: M_dot M_lparan Type M_rparan .

    $default  reduce using rule 172 (TypeAssertion)


State 295

  112 LabeledStmt: Identifier M_colon . Statement

    Identifier     shift, and go to state 254
    Op_add         shift, and go to state 111
    Key_break      shift, and go to state 255
    Key_continue   shift, and go to state 256
    Key_for        shift, and go to state 257
    Key_if         shift, and go to state 258
    Key_map        shift, and go to state 71
    Key_return     shift, and go to state 259
    Key_struct     shift, and go to state 72
    Key_type       shift, and go to state 18
    Key_var        shift, and go to state 19
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lcurly       shift, and go to state 194
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    $default  reduce using rule 23 (EmptyStmt)

    Block           go to state 260
    Statement       go to state 315
    SimpleStmt      go to state 263
    EmptyStmt       go to state 264
    ExpressionStmt  go to state 265
    IncDecStmt      go to state 266
    Assignment      go to state 267
    ShortVarDecl    go to state 268
    VarDecl         go to state 20
    Declaration     go to state 269
    CompositeLit    go to state 123
    LiteralType     go to state 124
    Operand         go to state 125
    OperandName     go to state 126
    SliceType       go to state 79
    LabeledStmt     go to state 270
    ReturnStmt      go to state 271
    BreakStmt       go to state 272
    ContinueStmt    go to state 273
    if_stmt         go to state 274
    ForStmt         go to state 275
    Expression      go to state 276
    Expression1     go to state 128
    Expression2     go to state 129
    Expression3     go to state 130
    Expression4     go to state 131
    Expression5     go to state 132
    UnaryExpr       go to state 133
    PrimaryExpr     go to state 277
    PrimaryExpr2    go to state 278
    TypeDecl        go to state 26
    ExpressionList  go to state 279
    ArrayList       go to state 280
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    Literal         go to state 135
    BasicLit        go to state 136
    UnaryOp         go to state 137
    String          go to state 138


State 296

  116 BreakStmt: Key_break Identifier .

    $default  reduce using rule 116 (BreakStmt)


State 297

  118 ContinueStmt: Key_continue Identifier .

    $default  reduce using rule 118 (ContinueStmt)


State 298

  123 ForStmt: Key_for OPENB . SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    $default  reduce using rule 23 (EmptyStmt)

    SimpleStmt      go to state 316
    EmptyStmt       go to state 264
    ExpressionStmt  go to state 265
    IncDecStmt      go to state 266
    Assignment      go to state 267
    ShortVarDecl    go to state 268
    CompositeLit    go to state 123
    LiteralType     go to state 124
    Operand         go to state 125
    OperandName     go to state 126
    SliceType       go to state 79
    Expression      go to state 276
    Expression1     go to state 128
    Expression2     go to state 129
    Expression3     go to state 130
    Expression4     go to state 131
    Expression5     go to state 132
    UnaryExpr       go to state 133
    PrimaryExpr     go to state 277
    PrimaryExpr2    go to state 278
    ExpressionList  go to state 279
    ArrayList       go to state 280
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    Literal         go to state 135
    BasicLit        go to state 136
    UnaryOp         go to state 137
    String          go to state 138


State 299

  119 if_stmt: Key_if Expression . OPENB Block elif_test_suite
  120        | Key_if Expression . OPENB Block elif_test_suite Key_else CLOSEB Block

    $default  reduce using rule 3 (OPENB)

    OPENB  go to state 317


State 300

  114 ReturnStmt: Key_return ExpressionList .
  178 ExpressionList: ExpressionList . M_comma Expression

    M_comma  shift, and go to state 192

    $default  reduce using rule 114 (ReturnStmt)


State 301

    2 Block: M_lcurly OPENB StatementList CLOSEB . M_rcurly

    M_rcurly  shift, and go to state 318


State 302

    7 StatementList: StatementList Statement . M_semicolon

    M_semicolon  shift, and go to state 319


State 303

    8 StatementList: Statement M_semicolon .

    $default  reduce using rule 8 (StatementList)


State 304

   25 IncDecStmt: Expression Op_unary_add .

    $default  reduce using rule 25 (IncDecStmt)


State 305

   26 IncDecStmt: Expression Op_unary_sub .

    $default  reduce using rule 26 (IncDecStmt)


State 306

  163 Index: M_lsqbracket . Expression M_rsqbracket
  164 Slice: M_lsqbracket . M_colon M_rsqbracket
  165      | M_lsqbracket . M_colon Expression M_rsqbracket
  166      | M_lsqbracket . Expression M_colon M_rsqbracket
  167      | M_lsqbracket . Expression M_colon Expression M_rsqbracket
  168      | M_lsqbracket . M_colon Expression M_colon Expression M_rsqbracket
  169      | M_lsqbracket . Expression M_colon Expression M_colon Expression M_rsqbracket

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_colon        shift, and go to state 229
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression    go to state 320
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 307

  157 PrimaryExpr2: PrimaryExpr Index .

    $default  reduce using rule 157 (PrimaryExpr2)


State 308

   35 ShortVarDecl: ExpressionList Op_assign . ExpressionList
   37             | ExpressionList Op_assign . ArrayList

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit    go to state 123
    LiteralType     go to state 124
    Operand         go to state 125
    OperandName     go to state 126
    SliceType       go to state 79
    Expression      go to state 139
    Expression1     go to state 128
    Expression2     go to state 129
    Expression3     go to state 130
    Expression4     go to state 131
    Expression5     go to state 132
    UnaryExpr       go to state 133
    PrimaryExpr     go to state 277
    PrimaryExpr2    go to state 278
    ExpressionList  go to state 321
    ArrayList       go to state 322
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    Literal         go to state 135
    BasicLit        go to state 136
    UnaryOp         go to state 137
    String          go to state 138


State 309

   27 Assignment: ExpressionList ASN_OP . ExpressionList

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit    go to state 123
    LiteralType     go to state 124
    Operand         go to state 125
    OperandName     go to state 126
    SliceType       go to state 79
    Expression      go to state 139
    Expression1     go to state 128
    Expression2     go to state 129
    Expression3     go to state 130
    Expression4     go to state 131
    Expression5     go to state 132
    UnaryExpr       go to state 133
    PrimaryExpr     go to state 134
    ExpressionList  go to state 323
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    Literal         go to state 135
    BasicLit        go to state 136
    UnaryOp         go to state 137
    String          go to state 138


State 310

   36 ShortVarDecl: ArrayList Op_assign . ExpressionList

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit    go to state 123
    LiteralType     go to state 124
    Operand         go to state 125
    OperandName     go to state 126
    SliceType       go to state 79
    Expression      go to state 139
    Expression1     go to state 128
    Expression2     go to state 129
    Expression3     go to state 130
    Expression4     go to state 131
    Expression5     go to state 132
    UnaryExpr       go to state 133
    PrimaryExpr     go to state 134
    ExpressionList  go to state 324
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    Literal         go to state 135
    BasicLit        go to state 136
    UnaryOp         go to state 137
    String          go to state 138


State 311

  161 KeyValList: Expression M_colon Expression M_comma . KeyValList

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    $default  reduce using rule 159 (KeyValList)

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression    go to state 217
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    KeyValList    go to state 325
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 312

  168 Slice: M_lsqbracket M_colon Expression M_colon Expression . M_rsqbracket

    M_rsqbracket  shift, and go to state 326


State 313

  169 Slice: M_lsqbracket Expression M_colon Expression M_colon . Expression M_rsqbracket

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression    go to state 327
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 314

  167 Slice: M_lsqbracket Expression M_colon Expression M_rsqbracket .

    $default  reduce using rule 167 (Slice)


State 315

  112 LabeledStmt: Identifier M_colon Statement .

    $default  reduce using rule 112 (LabeledStmt)


State 316

  123 ForStmt: Key_for OPENB SimpleStmt . M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB

    M_semicolon  shift, and go to state 328


State 317

  119 if_stmt: Key_if Expression OPENB . Block elif_test_suite
  120        | Key_if Expression OPENB . Block elif_test_suite Key_else CLOSEB Block

    M_lcurly  shift, and go to state 194

    Block  go to state 329


State 318

    2 Block: M_lcurly OPENB StatementList CLOSEB M_rcurly .

    $default  reduce using rule 2 (Block)


State 319

    7 StatementList: StatementList Statement M_semicolon .

    $default  reduce using rule 7 (StatementList)


State 320

  163 Index: M_lsqbracket Expression . M_rsqbracket
  166 Slice: M_lsqbracket Expression . M_colon M_rsqbracket
  167      | M_lsqbracket Expression . M_colon Expression M_rsqbracket
  169      | M_lsqbracket Expression . M_colon Expression M_colon Expression M_rsqbracket

    M_colon       shift, and go to state 252
    M_rsqbracket  shift, and go to state 330


State 321

   35 ShortVarDecl: ExpressionList Op_assign ExpressionList .
  178 ExpressionList: ExpressionList . M_comma Expression

    M_comma  shift, and go to state 192

    $default  reduce using rule 35 (ShortVarDecl)


State 322

   37 ShortVarDecl: ExpressionList Op_assign ArrayList .

    $default  reduce using rule 37 (ShortVarDecl)


State 323

   27 Assignment: ExpressionList ASN_OP ExpressionList .
  178 ExpressionList: ExpressionList . M_comma Expression

    M_comma  shift, and go to state 192

    $default  reduce using rule 27 (Assignment)


State 324

   36 ShortVarDecl: ArrayList Op_assign ExpressionList .
  178 ExpressionList: ExpressionList . M_comma Expression

    M_comma  shift, and go to state 192

    $default  reduce using rule 36 (ShortVarDecl)


State 325

  161 KeyValList: Expression M_colon Expression M_comma KeyValList .

    $default  reduce using rule 161 (KeyValList)


State 326

  168 Slice: M_lsqbracket M_colon Expression M_colon Expression M_rsqbracket .

    $default  reduce using rule 168 (Slice)


State 327

  169 Slice: M_lsqbracket Expression M_colon Expression M_colon Expression . M_rsqbracket

    M_rsqbracket  shift, and go to state 331


State 328

  123 ForStmt: Key_for OPENB SimpleStmt M_semicolon . BrkBlk ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB

    $default  reduce using rule 5 (BrkBlk)

    BrkBlk  go to state 332


State 329

  119 if_stmt: Key_if Expression OPENB Block . elif_test_suite
  120        | Key_if Expression OPENB Block . elif_test_suite Key_else CLOSEB Block

    $default  reduce using rule 121 (elif_test_suite)

    elif_test_suite  go to state 333


State 330

  163 Index: M_lsqbracket Expression M_rsqbracket .

    $default  reduce using rule 163 (Index)


State 331

  169 Slice: M_lsqbracket Expression M_colon Expression M_colon Expression M_rsqbracket .

    $default  reduce using rule 169 (Slice)


State 332

  123 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk . ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    ExpressionStmt  go to state 334
    CompositeLit    go to state 123
    LiteralType     go to state 124
    Operand         go to state 125
    OperandName     go to state 126
    SliceType       go to state 79
    Expression      go to state 335
    Expression1     go to state 128
    Expression2     go to state 129
    Expression3     go to state 130
    Expression4     go to state 131
    Expression5     go to state 132
    UnaryExpr       go to state 133
    PrimaryExpr     go to state 134
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    Literal         go to state 135
    BasicLit        go to state 136
    UnaryOp         go to state 137
    String          go to state 138


State 333

  119 if_stmt: Key_if Expression OPENB Block elif_test_suite .
  120        | Key_if Expression OPENB Block elif_test_suite . Key_else CLOSEB Block
  122 elif_test_suite: elif_test_suite . Key_elif Expression OPENB Block

    Key_else  shift, and go to state 336
    Key_elif  shift, and go to state 337

    $default  reduce using rule 119 (if_stmt)


State 334

  123 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt . M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB

    M_semicolon  shift, and go to state 338


State 335

   24 ExpressionStmt: Expression .

    $default  reduce using rule 24 (ExpressionStmt)


State 336

  120 if_stmt: Key_if Expression OPENB Block elif_test_suite Key_else . CLOSEB Block

    $default  reduce using rule 4 (CLOSEB)

    CLOSEB  go to state 339


State 337

  122 elif_test_suite: elif_test_suite Key_elif . Expression OPENB Block

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    CompositeLit  go to state 123
    LiteralType   go to state 124
    Operand       go to state 125
    OperandName   go to state 126
    SliceType     go to state 79
    Expression    go to state 340
    Expression1   go to state 128
    Expression2   go to state 129
    Expression3   go to state 130
    Expression4   go to state 131
    Expression5   go to state 132
    UnaryExpr     go to state 133
    PrimaryExpr   go to state 134
    MapType       go to state 80
    StructType    go to state 81
    PointerType   go to state 82
    Literal       go to state 135
    BasicLit      go to state 136
    UnaryOp       go to state 137
    String        go to state 138


State 338

  123 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon . SimpleStmt Block BrkBlkEnd CLOSEB

    Identifier     shift, and go to state 55
    Op_add         shift, and go to state 111
    Key_map        shift, and go to state 71
    Key_struct     shift, and go to state 72
    Imaginary_lit  shift, and go to state 112
    Float_lit      shift, and go to state 113
    Int_lit        shift, and go to state 114
    String_lit     shift, and go to state 11
    Op_sub         shift, and go to state 115
    Op_mult        shift, and go to state 116
    Op_pow         shift, and go to state 117
    Op_unary_and   shift, and go to state 118
    Op_unary_not   shift, and go to state 119
    M_lparan       shift, and go to state 120
    M_lsqbracket   shift, and go to state 74
    Bool_true      shift, and go to state 121
    Bool_false     shift, and go to state 122

    $default  reduce using rule 23 (EmptyStmt)

    SimpleStmt      go to state 341
    EmptyStmt       go to state 264
    ExpressionStmt  go to state 265
    IncDecStmt      go to state 266
    Assignment      go to state 267
    ShortVarDecl    go to state 268
    CompositeLit    go to state 123
    LiteralType     go to state 124
    Operand         go to state 125
    OperandName     go to state 126
    SliceType       go to state 79
    Expression      go to state 276
    Expression1     go to state 128
    Expression2     go to state 129
    Expression3     go to state 130
    Expression4     go to state 131
    Expression5     go to state 132
    UnaryExpr       go to state 133
    PrimaryExpr     go to state 277
    PrimaryExpr2    go to state 278
    ExpressionList  go to state 279
    ArrayList       go to state 280
    MapType         go to state 80
    StructType      go to state 81
    PointerType     go to state 82
    Literal         go to state 135
    BasicLit        go to state 136
    UnaryOp         go to state 137
    String          go to state 138


State 339

  120 if_stmt: Key_if Expression OPENB Block elif_test_suite Key_else CLOSEB . Block

    M_lcurly  shift, and go to state 194

    Block  go to state 342


State 340

  122 elif_test_suite: elif_test_suite Key_elif Expression . OPENB Block

    $default  reduce using rule 3 (OPENB)

    OPENB  go to state 343


State 341

  123 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt . Block BrkBlkEnd CLOSEB

    M_lcurly  shift, and go to state 194

    Block  go to state 344


State 342

  120 if_stmt: Key_if Expression OPENB Block elif_test_suite Key_else CLOSEB Block .

    $default  reduce using rule 120 (if_stmt)


State 343

  122 elif_test_suite: elif_test_suite Key_elif Expression OPENB . Block

    M_lcurly  shift, and go to state 194

    Block  go to state 345


State 344

  123 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt Block . BrkBlkEnd CLOSEB

    $default  reduce using rule 6 (BrkBlkEnd)

    BrkBlkEnd  go to state 346


State 345

  122 elif_test_suite: elif_test_suite Key_elif Expression OPENB Block .

    $default  reduce using rule 122 (elif_test_suite)


State 346

  123 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd . CLOSEB

    $default  reduce using rule 4 (CLOSEB)

    CLOSEB  go to state 347


State 347

  123 ForStmt: Key_for OPENB SimpleStmt M_semicolon BrkBlk ExpressionStmt M_semicolon SimpleStmt Block BrkBlkEnd CLOSEB .

    $default  reduce using rule 123 (ForStmt)
